<tool id="ggplot2_pca" name="PCA w ggplot2" version="1.0">
    <description>
    </description>
    <requirements>
        <requirement type="package" version="0.4.1">r-ggfortify</requirement>
        <requirement type="package" version="0.1.0">r-getoptlong</requirement>
        <requirement type="package" version="0.4.1">r-scales</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$__tool_directory__'/ggplot2_pca.R
        --input '$input1'
        ${inputdata.header}
        --rowname_index ${inputdata.row_names_index}
        ${inputdata.sample_name_orientation}
        --title \'$title\'
        --transform '$transform' 
        --background '$theme_selector'
        --scaling '$scaling.Plot_scaling' 
        $legend
        --group_type '$groups.group_type'
        #if str( $groups.group_type ) == "define_groups":
            #for $q in $groups.group_names:
                --group_name \'$q.groupName\'
                --group_cols '$q.groupCols'
                --group_colors \'$q.color_cond.plot_color\'
            #end for
        #end if
        --circles '$groups.circle'
        --plot_param '$plotoptions'
        --xaxismin '$scaling.xaxismin'
        --xaxismax '$scaling.xaxismax'
        --yaxismin '$scaling.yaxismin'
        --yaxismax '$scaling.yaxismax'
        --png_res_width '$png_bool.png_res_width'
        --png_res_height '$png_bool.png_res_height'
        --png_res '$png_bool.png_res'
        $svg_bool.svg_out
        --svg_res_width '$svg_bool.svg_res_width'
        --svg_res_height '$svg_bool.svg_res_height'
        --output1 '$output1'
        --output2 '$output2'
        ]]>        
    </command>
    <inputs>
        <param name="input1" type="data" format="tabular" label="Select table"/>
        <conditional name="inputdata">
            <param name="input_type" type="select" label="Select input dataset options" help="specific dataset input for reading">
                <option value="with_header" selected="True">Dataset with header</option>
                <option value="with_rownames">Dataset with row names</option>
                <option value="with_header_rownames">Dataset with header and row names</option>
                <option value="no_header_rownames">Dataset without header or row names</option>
            </param>
            <when value="with_header">
                <param name="header" value="--header" type="hidden"/>
                <param name="row_names_index" value="0" type="hidden"/>
                <param name="sample_name_orientation" type="select" label="Sample names orientation" display="radio" multiple="false" help="default horizontal: header names are interpreted as sample names">
                    <option value="--horizontal" selected="True">horizontal</option>
                    <option value="--no-horizontal">vertial</option>
                </param>
            </when>
            <when value="with_rownames">
                <param name="header" value="--no-header" type="hidden"/>
                <param name="row_names_index" label="Select column, for row names" type="data_column" data_ref="input1" help="WARNING: please consider that using row names might shift the grouping columns"/>
                <param name="sample_name_orientation" type="select" label="Sample names orientation" display="radio" multiple="false" help="default vertial: row names are interpreted as sample names">
                    <option value="--horizontal">horizontal</option>
                    <option value="--no-horizontal" selected="True">vertial</option>
                </param>
            </when>
            <when value="with_header_rownames">
                <param name="header" value="--header" type="hidden"/>
                <param name="row_names_index" label="Select column, for row names" type="data_column" data_ref="input1" help="WARNING: please consider that using row names might shift the grouping columns"/>
                <param name="sample_name_orientation" type="select" label="Sample names orientation" display="radio" multiple="false" help="deside whether header names or row names are interpreted as sample names">
                    <option value="--horizontal" selected="True">horizontal</option>
                    <option value="--no-horizontal">vertial</option>
                </param>
            </when>
            <when value="no_header_rownames">
                <param name="header" value="--no-header" type="hidden"/>
                <param name="row_names_index" value="0" type="hidden"/>
                <param name="sample_name_orientation" value="--horizontal" type="hidden"/>
            </when>
        </conditional>
        <param name="title" type="text" label="Plot title" value="">
            <sanitizer sanitize = "false"/>
        </param>
        <conditional name="groups">
            <param name="group_type" type="select" label="Select groups" help="coming soon">
                <option value="no_groups" selected="True">No groups</option>
                <option value="define_groups">Define groups</option>
            </param>
            <when value="no_groups">
                <param name="circle" value="no" type="hidden"/>
            </when>
            <when value="define_groups">
                <repeat name="group_names" title="Group" help="Select the samples for this group" min="2">
                    <param name="groupName" type="text" min="1" label="Group Name" optional="False" help="Name for this group 
                        use short names, avoid special characters and numbers at the beginning of the name (The names might be changed by the program to make them conform to processing in R)">
                        <validator type="no_options" message="Please choose a name for this group!"/>
                    </param>
                    <param name="groupCols" type="data_column" data_ref="input1" label="Columns for group" 
                        multiple="true" min="1" help="WARNING: please use columns indices after removing the row name column if selected in second section!">
                        <validator type="no_options" message="Select at least one column for each group!"/>
                        <!--<filter type="remove_value" meta_ref="groupCols" />-->
                    </param>
                    <conditional name="color_cond">
                        <param name="color_bool" type="boolean" checked="false" truevalue="--colors" falsevalue="--no-colors" label="Select colors"/>
                        <when value="--colors">
                            <param name="plot_color" type="color" label="Pick color" value="">
                                 <sanitizer sanitize = "false"/>
                            </param>
                        </when>
                        <when value="--no-colors">
                            <param name="plot_color" value="none" type="hidden"/>
                        </when>
                    </conditional> 
                </repeat>
                <param name="circle" type="select" label="Select type of ellipses" display="radio" multiple="false">
                    <option value="no">no ellipes</option>
                    <option value="convex">convex</option>
                    <option value="t" selected="True">t-distribution</option>
                    <option value="norm">normal distribution</option>
                    <option value="euclid">euclidean distance</option>
                </param>
            </when>
        </conditional> 
        <param name="plotoptions" type="select" label="Select plot layout" display="radio" >
            <option value="shape" >show shapes</option>
            <option value="label" selected="True">show labels (group elements)</option>
            <option value="shape,label" >show shapes and labels</option>
        </param>
        <param name="transform" type="select" label="Advanced - log transformation">
            <option value="none">Plot the data as it is</option>
            <option value="log2">Log2(value) transform my data</option>
            <option value="log2plus1">Log2(value+1) transform my data</option>
            <option value="log10">Log10(value) transform my data</option>
            <option value="log10plus1">Log10(value+1) transform my data</option>
        </param>
        <param name="theme_selector" type="select" label="Advanced - backgound theme for plot">
          <option value="bw">Black and white</option>
          <option value="Default">Default (grey)</option>
        </param>
        <conditional name="scaling">
            <param name="Plot_scaling" type="select" label="Advanced - Axis scaling">
                <option value="Automatic" selected="True">Automatic axis scaling</option>
                <option value="Defined">User defined axis scales</option>
            </param>
            <when value="Automatic">
                <param name="xaxismin" type="hidden" value="0" />
                <param name="xaxismax" type="hidden" value="1" />
                <param name="yaxismin" type="hidden" value="2" />
                <param name="yaxismax" type="hidden" value="3" />
            </when>
            <when value="Defined">
                <param name="xaxismin" type="float" value="-0.35" label="minimal range of x-axis" />
                <param name="xaxismax" type="float" value="0.35" label="maximal range of x-axis" />
                <param name="yaxismin" type="float" value="0" label="minimal range of y-axis" />
                <param name="yaxismax" type="float" value="3" label="maximal range of y-axis" />
            </when>
        </conditional>
        <param name="legend" type="select" label="Legend options">
              <option value="--legend">Include legend on plot</option>
              <option value="--no-legend">Hide legend</option>
        </param>
        <conditional name="png_bool">
            <param name="png_out" type="boolean" checked="false" truevalue="1" falsevalue="0" label="Options for PNG"/>
            <when value="1">
                <param name="png_res_width" label="png width" value="1600" type="integer" help="in px (default: 1600)"/>
                <param name="png_res_height" label="png heigth" value="1400" type="integer" help="in px (default: 1400)"/>
                <param name="png_res" label="png res" value="200" type="integer" help="in px (default: 200)"/>
            </when>
             <when value="0">
                <param name="png_res_width" value="1600" type="hidden"/>
                <param name="png_res_height" value="1400" type="hidden"/>
                <param name="png_res" value="200" type="hidden"/>
            </when>
        </conditional>
        <conditional name="svg_bool">
            <param name="svg_out" type="boolean" checked="false" truevalue="--output_type" falsevalue="--no-output_type" label="Additional SVG output"/>
            <when value="--output_type">
                <param name="svg_res_width" label="svg width" value="16" type="integer" help="in inch (default: 16)"/>
                <param name="svg_res_height" label="svg heigth" value="14" type="integer" help="in inch (default: 14)"/>
            </when>
            <when value="--no-output_type">
                <param name="svg_res_width" value="16" type="hidden"/>
                <param name="svg_res_height" value="14" type="hidden"/>
            </when>
        </conditional>  
    </inputs>
    <outputs>
        <data name="output1" format="png" label="${tool.name} on ${on_string}: PNG PCA"/>
        <data name="output2" format="svg" label="${tool.name} on ${on_string}: SVG PCA" >
            <filter>svg_bool['svg_out'] == 1</filter>
        </data>
    </outputs>
	<tests>
        <test>
            <param name="input1" value="example1.txt" ftype="tabular"/>
            <conditional name="inputdata">
                <param name="input_type" value="with_header_rownames"/>
                <param name="header" value="--header"/>
                <param name="row_names_index" value="1"/>
                <param name="sample_name_orientation" value="--horizontal"/>
            </conditional>
            <param name="title" value="Test plot"/>
            <conditional name="groups">
                <param name="group_type" value="define_groups"/>
                <repeat name="group_names">
                    <param name="groupName" value="C"/>
                    <param name="groupCols" value="1,2,3,4,5"/>
                    <conditional name="color_cond">
                        <param name="color_bool" value="--no-colors"/>
                        <param name="plot_color" value="none"/>
                    </conditional>
                </repeat>
                <repeat name="group_names">
                    <param name="groupName" value="LPS01"/>
                    <param name="groupCols" value="6,7,8,9,10"/>
                    <conditional name="color_cond">
                        <param name="color_bool" value="--no-colors"/>
                        <param name="plot_color" value="none"/>
                    </conditional>
                </repeat>
                <repeat name="group_names">
                    <param name="groupName" value="LPS1"/>
                    <param name="groupCols" value="11,12,13,14,15"/>
                    <conditional name="color_cond">
                        <param name="color_bool" value="--no-colors"/>
                        <param name="plot_color" value="none"/>
                    </conditional>
                </repeat>
                <repeat name="group_names">
                    <param name="groupName" value="LPS5"/>
                    <param name="groupCols" value="16,17,18,19,20"/>
                    <conditional name="color_cond">
                        <param name="color_bool" value="--no-colors"/>
                        <param name="plot_color" value="none"/>
                    </conditional>
                </repeat>                
                <param name="circle" value="convex"/>
            </conditional>
            <param name="plotoptions" value="label"/>
            <param name="transform" value="none"/>
            <param name="theme_selector" value="Default"/>
            <conditional name="scaling">                
                <param name="Plot_scaling" value="Automatic"/>
                <param name="xaxismin" value="0"/>
                <param name="xaxismax" value="1"/>
                <param name="yaxismin" value="2"/>
                <param name="yaxismax" value="3"/>
            </conditional>
            <param name="legend" value="--legend"/>
            <conditional name="png_bool">
                <param name="png_out" value="1"/>
                <param name="png_res_width" value="1600"/>
                <param name="png_res_height" value="1400"/>
                <param name="png_res" value="200"/>
            </conditional>
            <conditional name="svg_bool">
                <param name="svg_out" value="--output_type"/>
                <param name="svg_res_width" value="16"/>
                <param name="svg_res_height" value="14"/>
            </conditional>
            <output name="output2" file="out.svg" ftype="svg"/>
        </test>
    </tests>
    <help><![CDATA[

**What it does**

This tool generates a Principal component analysis (PCA) for a given table using a combination of ggplot2 and ggfortify.

-----

**Example**

**WARNING:** Be carefull when selecting row names in the second option because the grouping elements do not update automaticly before executing the script. This means that columns have to be chosen as if the row name column was already be removed. 


**Example for row names in table**

+--------+-----------+-----------+---------------+---------------+
| name   | control 1 | control 2 |  treatment 1  |  treatment 2  |
+========+===========+===========+===============+===============+
| gene 1 |   10      |     12    |       3455    |        232    |
+--------+-----------+-----------+---------------+---------------+
| gene 2 |      20   |     2     |       345     |        334    |
+--------+-----------+-----------+---------------+---------------+
| gene 3 |      200  |     210   |       20      |        2      |
+--------+-----------+-----------+---------------+---------------+
|        |           |           |               |               |
+--------+-----------+-----------+---------------+---------------+
|   1    |       2   |      3    |      4        |       5       | 
+--------+-----------+-----------+---------------+---------------+


The new index after reading the table will be:

+--------+-----------+-----------+--------------+---------------+
| name   | control 1 | control 2 | treatment 1  |  treatment 2  |
+========+===========+===========+==============+===============+
|*       |      1    |     2     |      3       |      4        |
+--------+-----------+-----------+--------------+---------------+


-----
Pictures cominig soon.


]]>
    
    </help>
    <citations>
        <citation type="bibtex">@book{wickham2009ggplot2,
            author = {Hadley Wickham},
            title = {ggplot2: Elegant Graphics for Data Analysis},
            publisher = {Springer-Verlag New York},
            year = {2009},
            isbn = {978-0-387-98140-6},
            url = {http://ggplot2.org}
            }
        </citation>
        <citation type="bibtex">@article{tang2016ggfortify,
            title={ggfortify: unified interface to visualize statistical results of popular R packages},
            author={Tang, Yuan and Horikoshi, Masaaki and Li, Wenxuan},
            journal={The R Journal},
            volume={8},
            number={2},
            pages={478-489},
            year={2016},
            url = {https://journal.r-project.org/archive/2016/RJ-2016-060/RJ-2016-060.pdf}
            }
        </citation>
        <citation type="bibtex">@manual{gu2016getoptlong,
            title = {GetoptLong: Parsing Command-Line Arguments and Variable Interpolation},
            author = {Zuguang Gu},
            year = {2016},
            note = {R package version 0.1.5},
            url = {https://CRAN.R-project.org/package=GetoptLong},
            }
        </citation>
    </citations>
</tool>
