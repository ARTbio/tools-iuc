<tool id="artic_minion" name="ARTIC minion" version="1.1.0_rc2+galaxy0">
    <description></description>
    <requirements>
        <requirement type="package" version="1.1.0_rc2">artic</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if str( $primer_scheme_source.primer_scheme_source_selector ) == "tool_data_table":
          ln -s $primer_scheme_source.primer_scheme_bedfile.fields.path .
        #else:
          #set $primer_scheme = str( $primer_scheme_source.primer_scheme_bedfile )
        #end if
        artic minion
            --threads \${GALAXY_SLOTS:-1}
            --normalise '${normalise}'
            --read-file '${input_read_file}'
            --scheme-directory '.'
            --medaka
            #if $use_bwa:
              --bwa
            #end if
            '${primer_scheme}'
            '${input_read_file.element_name}'
    ]]></command>
    <inputs>
        <param name="input_read_file" type="data" format="fastq,fastqsanger,fastq.gz,fastqsanger.gz" label="Input Read File"/>
        <param name="normalise" type="integer" min="1" value="200" max="2000" label="Coverage normalisation depth"/>
        <param name="use_bwa" type="boolean" label="Use bwa aligner"/>
        <conditional name="primer_scheme_source">
            <param name="primer_scheme_source_selector" type="select" label="Select a primer scheme from your history or use one from a tool data table?"
                   help="Screening files must be stored in the 'primer_scheme_bedfiles' tool data table">
                <option value="tool_data_table">From tool data table</option>
                <option value="history">From history</option>
            </param>
            <when value="tool_data_table">
                <param name="primer_scheme_bedfile" type="select" format="bed" label="Primer Scheme">
	            <options from_data_table="primer_scheme_bedfiles">
	                <validator type="no_options" message="No primer scheme .bed files are available" />
                    </options>
	        </param>
            </when>
            <when value="history">
                <param name="primer_scheme_bedfile" type="data" format="bed" label="Primer Scheme" />
            </when>
        </conditional>

    </inputs>
    <outputs>
        <data name="alignment_trimmed" format="bam" from_workdir="*.trimmed.bam" label="" />
        <data name="variants_tabular" format="tabular" from_workdir="*.variants.tab" label="" />
        <data name="variants_merged_vcf" format="vcf" from_workdir="*.merged.vcf" label="" />
        <data name="consensus_fasta" format="fasta" from_workdir="*.consensus.fasta" label="" />
    </outputs>
    <tests>
    </tests>
    <help><![CDATA[
    This tool aligns MinION reads that were generated from a tiling amplicon library against a viral reference sequence. It generates a consensus fasta file and a vcf variant file.

    This tool is configured to use the experimental 'medaka' variant caller.
    ]]></help>
    <citations>
    </citations>
</tool>
