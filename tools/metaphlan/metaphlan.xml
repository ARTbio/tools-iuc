<tool id="metaphlan" name="MetaPhlAn" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>to profile the composition of microbial communities</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements">
        <requirement type="package" version="2.4.2">bowtie2</requirement>
    </expand>
    <version_command>metaphlan -v</version_command>
    <command detect_error="aggressive"><![CDATA[
#if $in.selector == 'raw'
    #if $in.raw_in.selector == 'paired'
        #if $in.raw_in.in_f.datatype.file_ext != $in.raw_in.in_r.datatype.file_ext
    echo "Different datatypes for input paired-end files"
    &&
    exit 1
        #end if
    #else if $in.raw_in.selector == 'multiple'
        #set $type=$in.raw_in.in[0].datatype.file_ext
        #for $f in $in.raw_in.in
            #if $f.datatype.file_ext != $type
    echo "Different datatypes for input files"
    &&
    exit 1
            #end if
        #end for
    #end if
#end if

#if $mapping.db.db_selector == "history"
    mkdir 'ref_db'
    &&
    bowtie2-build '$mapping.db.bowtie2db' 'ref_db/custom_db'
    &&
    python '$__tool_directory__/transform_json_to_pkl.py'
        --json_input '$mapping.db.mpa_pkl'
        --pkl_output 'ref_db/custom_db.pkl'
    &&
#end if

metaphlan
    #if $in.selector == 'raw'
        #if $in.raw_in.selector == 'single' 
    --input_type '$in.raw_in.in.datatype.file_ext'
        #else if $in.raw_in.selector == 'multiple'
    --input_type '$in.raw_in.in[0].datatype.file_ext'
        #else
    --input_type '$in.raw_in.in_f.datatype.file_ext'
        #end if
    --read_min_len $in.read_min_len
    #else
    --input_type '$in.selector'
    #end if

    --input_type '${input_file.datatype.file_ext}'

    #if $mapping.db.db_selector == "cached"
        --bowtie2db '$mapping.db.cached_db.fields.path'
        --index '$mapping.db.cached_db.fields.dbkey'
    #else
        --bowtie2db 'ref_db/ref_db'
        --index 'custom_db'
    #end if

    --bt2_ps '$mapping.bt2_ps'
    --min_mapq_val $mapping.min_mapq_val

    -t '$analysis.analysis_type.t'
    #if $analysis.analysis_type.t == "rel_ab" or $analysis.analysis_type.t == "rel_ab_w_read_stats"
    --tax_lev '$analysis_type.tax_lev'
    #else if $analysis.analysis_type.t == "clade_specific_strain_tracker"
    --clade '$analysis.analysis_type.clade'
        #if str($analysis.analysis_type.min_ab) != ''
    --min_ab $analysis.analysis_type.min_ab
        #end if
    #else if $analysis.analysis_type.t == "marker_ab_table" and str($analysis.analysis_type.nreads) != ''
    --nreads $$analysis.analysis_type.nreads
    #else if $analysis.analysis_type.t == "marker_pres_table" and str($analysis.analysis_type.pres_th) != ''
    --pres_th $analysis.analysis_type.pres_th
    #end if

    --min_cu_len $analysis.min_cu_len
    #if str($analysis.min_alignment_len) != ''
    --min_alignment_len $analysis.min_alignment_len
    #end if
    $analysis.add_viruses
    $analysis.ignore_eukaryotes
    $analysis.ignore_bacteria
    $analysis.ignore_archaea
    --stat_q $analysis.stat_q
    --perc_nonzero $analysis.perc_nonzero
    #if str($analysis.ignore_markers) != ''
    --ignore_markers '$analysis.ignore_markers'
    #end if
    $analysis.avoid_disqm

    --sample_id_key '$out.sample_id_key'
    --sample_id '$out.sample_id'
    $out.use_group_representative
    $out.legacy-output
    $out.CAMI_format_output
    $out.unknown_estimation

    -o '$output_file'
    --bowtieout '$bowtie2out'
    -s '$sam_output_file'
    --biom '$biom_output_file'

    --nproc \${GALAXY_SLOTS:-4}

    #if $in.selector == 'raw'
        #if $in.raw_in.selector != 'paired'
    '$in.raw_in.in'
        #else
    '$in.raw_in.in_f','$in.raw_in.in_r'
        #end if
    #else
    '$in.selector'
    #end if
    
    ]]></command>
    <inputs>
        <conditional name="in">
            <param name="selector" type="select" label="Input(s)">
                <option value="raw" selected="true">Fasta/FastQ file(s) with metagenomic reads</option>
                <option value="sam">Externally BowTie2-mapped SAM file</option>
                <option value="bowtie2out">Intermediary mapping file of the metagenome generated by a previous MetaPhlAn run</option>
            </param>
            <when value="raw">
                <conditional name="raw_in">
                    <param name="selector" type="select" label="Fasta/FastQ file(s) with metagenomic reads">
                        <option value="single" selected="true">One single-end file</option>
                        <option value="multiple">Multiple single-end files</option>
                        <option value="paired">Paired-end files</option>
                    </param>
                    <when value="single">
                        <param name="in" type="data" format="fastq,fasta" label="Single-end Fasta/FastQ file with metagenomic reads"/>
                    </when>
                    <when value="multiple">
                        <param name="in" type="data" format="fastq,fasta" multipe="true" label="Single-end Fasta/FastQ files with metagenomic reads"/>
                    </when>
                    <when value="paired">
                        <param name="in_f" type="data" format="fastq,fasta" label="Forward paired-end Fasta/FastQ file with metagenomic reads"/>
                        <param name="in_r" type="data" format="fastq,fasta" label="Reverse paired-end Fasta/FastQ file with metagenomic reads"/>
                    </when>
                </conditional>
                <param argument="--read_min_len" type="integer" value="70" label="Minimum length of the reads to be considered when parsing the input file"/>
            </when>
            <when value="sam">
                <param name="in" type="data" format="sam" label="Externally BowTie2-mapped SAM file" help="BowTie2 needs to be used first to map metagenom reads"/>
            </when>
            <when value="bowtie2out">
                <param name="in" type="data" format="tabular" label="Intermediary mapping file of the metagenome generated by a previous MetaPhlAn run" 
                    help="File needs to be generated with MetaPhlAn versions >3.0"/>
            </when>
        </conditional>
        <section name="mapping" title="Mapping" expand="true">
            <conditional name="db">
                <param name="db_selector" type="select" label="Database with clade-specific marker genes">
                    <option value="cached" selected="true">Locally cached</option>
                    <option value="history">From history</option>
                </param>
                <when value="cached">
                    <param name="cached_db" label="Cached database with clade-specific marker genes" type="select">
                        <options from_data_table="metaphlan_database">
                            <validator message="No MetaPhlAn database is available" type="no_options" />
                        </options>
                    </param>
                </when>
                <when value="history">
                    <param argument="--bowtie2db" type="data" format="fasta" label="Database with clade-specific marker genes from history"/>
                    <param argument="--mpa_pkl" type="data" format="json" label="Metadata associate to the database with clade-specific marker genes from history"/>
                </when>
            </conditional>
            <param argument="--bt2_ps" type="select" label="Presets options for BowTie2" help="Applied only with FASTA files">
                <option value="sensite">Sensitive</option>
                <option value="very-sensitive" selected="true">Very sensitive</option>
                <option value="sensite-local">Sensitive local</option>
                <option value="very-sensite-local">Very sensitive local</option>
            </param>
            <param argument="--min_mapq_val" type="integer" value="5" label="Minimum mapping quality value (MAPQ)"/>
        </section>
        <section name="analysis" title="Analysis" expand="true">
            <conditional name="analysis_type">
                <param argument="-t" type="select" label="Type of analysis to perform">
                    <option value="rel_ab" selected="true">rel_ab: Profiling a metagenomes in terms of relative abundances</option>
                    <option value="rel_ab_w_read_stats">rel_ab_w_read_stats: Profiling a metagenomes in terms of relative abundances and estimate the number of reads comming from each clade</option>
                    <option value="reads_map">reads_map: Mapping from reads to clades (only reads hitting a marker)</option>
                    <option value="clade_profiles">clade_profiles: Normalized marker counts for clades with at least a non-null marker</option>
                    <option value="clade_specific_strain_tracker">clade_specific_strain_tracker: List of markers present for a specific clade and all its subclades</option>
                    <option value="marker_ab_table">marker_ab_table: Normalized marker counts (only when > 0.0 and normalized by metagenome size if number of reads is specified)</option>
                    <option value="marker_counts">marker_counts: Non-normalized marker counts (use with extreme caution)</option>
                    <option value="marker_pres_table">marker_pres_table: List of markers present in the sample (threshold at 1.0 if not differently specified with --pres_th</option>
                </param>
                <when value="rel_ab">
                    <expand macro="tax_lev"/>
                </when>
                <when value="rel_ab_w_read_stats">
                    <expand macro="tax_lev"/>
                </when>
                <when value="reads_map"/>
                <when value="clade_profiles"/>
                <when value="clade_specific_strain_tracker">
                    <param argument="--clade" type="text" value="" label="Clade for which to extract list of markers present" 
                        help="Markers are also extracted for subclades" />
                    <param argument="--min_ab" type="float" optional="true" label="The minimum percentage abundance for the clade"/>
                </when>
                <when value="marker_ab_table">
                    <param argument="--nreads" type="integer" optional="true" label="Total number of reads in the original metagenome" 
                        help="It is used for normalizing the length-normalized counts with the metagenome size as well. No normalization applied if the value is not specified"/>
                </when>
                <when value="marker_counts"/>
                <when value="marker_pres_table">
                    <param argument="--pres_th" type="integer" optional="true" label="Threshold for calling a marker present"/>
                </when>
            </conditional>
            <param argument="--min_cu_len" type="integer" value="2000" 
                label="Minimum total nucleotide length for the markers in a clade for estimating the abundance without considering sub-clade abundances"/>
            <param argument="--min_alignment_len" type="integer" optional="true" 
                label="Sam records for aligned reads with the longest subalignment length smaller than this threshold will be discarded."/>
            <param argument="--add_viruses" type='boolean' checked="true" truevalue='--add_viruses' falsevalue='' label="Profile viral organisms?"/>
            <param argument="--ignore_eukaryotes" type='boolean' checked="true" truevalue='' falsevalue='--ignore_eukaryotes' label="Profile eukaryotic organisms?"/>
            <param argument="--ignore_bacteria" type='boolean' checked="true" truevalue='' falsevalue='--ignore_bacteria' label="Profile bacteria organisms?"/>
            <param argument="--ignore_archaea" type='boolean' checked="true" truevalue='' falsevalue='--ignore_archaea' label="Profile archea organisms?"/>
            <param argument="--stat" type="select" label="Statistical approach for converting marker abundances into clade abundances">
                <option value="avg_g">avg_g: Clade global (i.e. normalizing all markers together) average (avg_g)</option>
                <option value="avg_l">avg_l: Average of length-normalized marker counts</option>
                <option value="tavg_g" selected="true">tavg_g: Truncated clade global average at --stat_q quantile</option>
                <option value="tavg_l">tavg_l: Truncated average of length-normalized marker counts (at --stat_q)</option>
                <option value="wavg_g">wavg_g: Winsorized clade global average (at --stat_q)</option>
                <option value="wavg_l">wavg_l: Winsorized average of length-normalized marker counts (at --stat_q)</option>
                <option value="med">med: Median of length-normalized marker counts</option>
            </param>
            <param argument="--stat_q" type="float" value="0.2" label="Quantile value for the robust average"/>
            <param argument="--perc_nonzero" type="float" value="0.33" label="Percentage of markers with a non zero relative abundance for misidentify a species"/>
            <param argument="--ignore_markers" type="data" format="txt,tabular" label="File containing a list of markers to ignore" help="One marker per line"/>
            <param argument="--avoid_disqm" type='boolean' checked="true" truevalue='--avoid_disqm' falsevalue='' 
                label="Deactivate the procedure of disambiguating the quasi-markers based on the marker abundance pattern found in the sample?"
                help="It is generally recommended to keep the disambiguation procedure in order to minimize false positives"/>
        </section>
        <section name="out" title="Outputs" expand="true">
            <param argument="--sample_id_key" type="text" value="SampleID" label="Sample ID key for this analysis"/>
            <param argument="--sample_id" type="text" value="Metaphlan_Analysis" label="Sample ID for this analysis"/>
            <param argument="--use_group_representative" type='boolean' checked="false" truevalue='--use_group_representative' falsevalue='' 
                label="Use a species as representative for species groups?"/>
            <param argument="--legacy-output" type='boolean' checked="false" truevalue='--legacy-output' falsevalue='' 
                label="Old MetaPhlAn2 two columns output?"/>
            <param argument="--CAMI_format_output" type='boolean' checked="false" truevalue='--CAMI_format_output' falsevalue='' 
                label="Report the profiling using the CAMI output format?"/>
            <param argument="--unknown_estimation" type='boolean' checked="false" truevalue='--unknown_estimation' falsevalue='' 
                label="Scale relative abundances to the number of reads mapping to known clades in order to estimate unknowness?"/>
        </section>
    </inputs>
    <outputs>
        <data name="output_file" format="tabular" label="${tool.name} on ${on_string}: Predicted taxon relative abundances" />
        <data name="bowtie2out" format="tabular" label="${tool.name} on ${on_string}: Bowtie2 output" />
        <data name="sam_output_file" format="sam" label="${tool.name} on ${on_string}: SAM file" />
        <data name="biom_output_file" format="biom1" label="${tool.name} on ${on_string}: BIOM file" />
    </outputs>
    <help><![CDATA[
**What it does**

METAgenomic PHyLogenetic ANalysis for metagenomic taxonomic profiling.

========== MetaPhlAn clade-abundance estimation ================= 

The basic usage of MetaPhlAn consists in the identification of the clades (from phyla to species and 
strains in particular cases) present in the metagenome obtained from a microbiome sample and their 
relative abundance.

========== Marker level analysis ============================ 

MetaPhlAn introduces the capability of characterizing organisms at the strain level using non
aggregated marker information. Such capability comes with several slightly different flavours and 
are a way to perform strain tracking and comparison across multiple samples.
Usually, MetaPhlAn is first ran with the default -t to profile the species present in
the community, and then a strain-level profiling can be performed to zoom-in into specific species
of interest. This operation can be performed quickly as it exploits the --bowtie2out intermediate 
file saved during the execution of the default analysis type.


**Inputs**

Metaphlan takes as input a sequence file in Fasta, FastQ, a SAM file.

It is also possible to use a custom database with clade-specific marker genes. In this case, a fasta file with marker gene sequences is required and also a file containing metadata. This file is a json file with:

::

  {
    "taxonomy": {
            "taxonomy of genome1": genome1_length,
            "taxonomy of genome2": genome2_length,
            ...
        }
    "markers": {
            "marker1_name": {
                "clade": the clade that the marker belongs to,
                "ext": [list of external genomes where the marker appears],
                "len": length of the marker,
                "score": score of the marker,
                "taxon": the taxon of the marker
            }
            ...
        }
  }

The marker name correspond to the corresponding sequence name in the FastA file containing marker gene sequences.

**Outputs**

The main output file is a tab-separated file with the predicted taxon relative abundances.
    ]]></help>
    <expand macro="citations"/>
</tool>
