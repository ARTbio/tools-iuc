<?xml version="1.0" encoding="utf-8"?>
<tool id="merlin" name="Tool for Linkage Analysis" version="0.1.0" python_template_version="3.5">
    <requirements>
        <requirement type="package">merlin</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    merlin -p $pname -m $mname -d $dname --quiet --error --best --npl  
    
    #if $markerNames
    --markerNames
    #end if

    #if $minStep
    --minStep $minStep
    #end if

    #if $maxStep
    --maxStep $maxStep
    #end if

    #if $steps
    --steps $steps
    #end if

    #if $grid
    --grid $grid
    #end if

    #if $start
    --start $start
    #end if

    #if $stop
    --stop $stop
    #end if

    #if $randomseed
    -r $randomseed
    #end if

    #if $allelefrequency.allelefreq.value == "maxlike":
    -fm
    #elif $allelefrequency.allelefreq.value == "founders":
    -ff
    #elif $allelefrequency.allelefreq.value == "individuals":
    -fa
    #elif $allelefrequency.allelefreq.value == "equal":
    -fe
    #elif $allelefrequency.allelefreq.value == "file":
    -f '$allelefrequency.file'
    #end if
		
    > $merlinoutput
    ]]></command>
    <inputs>
	<param name="pname" type="data" format="txt" help="Set of data values" />
	<param name="mname" type="data" format="txt" help="Set of map values" />
	<param name="dname" type="data" format="txt" help="Set of pedigree values" />
	<!-- Beginning of the optional paramters -->
	<param name="markerNames" type="boolean" checked="false" optional="true" label="For Marker Serial" help="Useful to eliminate numbers and introduce serial" />
	<param name="minStep" type="float" optional="true" label="For Minimum Step" help="Useful to find the minimum value" />
	<param name="maxStep" type="float" optional="true" label="For Maximum Step" help="Useful to find the maximum value" />
	<param name="steps" type="integer" min="0" optional="true" label="Steps" help="I can't" />
	<param name="grid" type="integer" min="0" optional="true" label="Grid" help="I can't" />
	<param name="start" type="integer" min="0" optional="true" label="Getting Started" help="Useful to start" />
	<param name="stop" type="integer" min="0" optional="true" label="Halt" help="Useful to stop" />
	<param name="randomseed" type="integer" min="0" optional="true" label="Random" help="This is to ensure reproducibility." />
	<!-- Beginning of the conditional parameters -->
	<conditional name="allelefrequency">
	    <param name="allelefreq" type="select" label="Obtaining allele frequency">
		<option value="maxlike"> Maximum Likelihood </option>
		<option value="founders"> Founders </option>
		<option value="individuals">All Individuals</option>
		<option value="equal">Assume Equal</option>
		<option value="file">User File</option>
	    </param>
	    <when value="maxlike">
		<!-- Nothing to be added. -->
	    </when>
	    <when value="founders">
		<!-- Nothing to be added. -->
	    </when>
	    <when value="individuals">
		<!-- Nothing to be added. -->
	    </when>
	    <when value="equal">
		<!-- Nothing to be added. -->
	    </when>
	    <when value="file">
		<param name="file" type="data" format="txt" help="Picking up a user file."/>
	    </when>
	</conditional>
    </inputs>
    <outputs>
	<data name="errors" format="txt" from_work_dir="merlin.err" />
	<data name="flow" format="txt" from_work_dir="merlin.flow" />
	<data name="chromosome" format="txt" from_work_dir="merlin.chr" />
	<data name="merlinoutput" format="lod" />
    </outputs>
    <tests>
	<test>
	    <!-- No optional parameters used in this test but testing a conditional parameter and random value. -->
	    <param name="pname" value="parametric.ped"/>
	    <param name="mname" value="parametric.map"/>
	    <param name="dname" value="parametric.dat"/>
	    <param name="allelefreq" value="file"/>
	    <param name="file" value="alle.txt" />
	    <param name="randomseed" value="2" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text="MRK1 MRK2 MRK3 MRK4 MRK5 MRK6 MRK7 MRK8 MRK9 MRK10" />
		    <not_has_text text="--minStep [2]" />
		    <has_line line="Phenotype: VERY_RARE_DISEASE [ALL] (1 family)" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="parametric.chr" />
	    <output name="flow" file="parametric.flow" />
	    <output name="errors" file="parametric.err" />
	</test>
	<test>
	    <!-- This test uses markerNames optional parameter and maxlike option in this test case leads to error. -->
	    <param name="pname" value="x.ped"/>
	    <param name="mname" value="x.map"/>
	    <param name="dname" value="x.dat"/>
	    <param name="markerNames" value="true" />
	    <param name="allelefreq" value="founders"/>
	    <param name="randomseed" value="6" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "MRK1 MRK2 MRK3 MRK4 MRK5 MRK6 MRK7 MRK8 MRK9 MRK10" />
		    <has_text text= "Family:     1 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text="Family:     2 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:     3 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:     4 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:     5 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <not_has_text text="--minStep [2]" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="x.chr" />
	    <output name="flow" file="x.flow" />
	    <output name="errors" file="x.err" />
	</test>
	<test>
	    <!-- This test uses minStep optional parameter -->
	    <param name="pname" value="haplo.ped"/>
	    <param name="mname" value="haplo.map"/>
	    <param name="dname" value="haplo.dat"/>
	    <param name="allelefreq" value="individuals"/>
	    <param name="minStep" value="2" />
	    <param name="randomseed" value="5" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "SNP-1 SNP-2 SNP-3" />
		    <has_text text= "--minStep [2.00]" />
		    <not_has_text text="--markerNames [ON]" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="haplo.chr" />
	    <output name="flow" file="haplo.flow" />
	    <output name="errors" file="haplo.err" />
	</test>
	<test>
	    <!--This test uses steps optinal parameter -->
	    <param name="pname" value="asp.ped"/>
	    <param name="mname" value="asp.map"/>
	    <param name="dname" value="asp.dat"/>
	    <param name="allelefreq" value="equal"/>
	    <param name="steps" value="3" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "Phenotype: affection [ALL] (200 families)" />
		    <has_text text= "--steps [3]" />
		    <not_has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome">
		<assert_contents>
		    <has_text text= "FAMILY 200 [Most Likely]" />
		    <has_text text= "1 (F)               2 (F)              4 (2,1)             3 (2,1)" />
		    <has_text text= "4  :  1             4  :  1             4  :  4             1  :  1" />
		    <has_text text=" 3,4A :  3           4,3A :  3           4,3A | A3,4           3  |  3" />
		    <has_text text="2,4A : B4,1         4,2A : B1,4         4,2A | A2,4         1,4B | B4,1" />
		</assert_contents>
	    </output>
	    <output name="flow">
		<assert_contents>
		    <has_text text= "FAMILY 200 [Most Likely]" />
		    <has_text text= "1 (F)               2 (F)              4 (2,1)             3 (2,1)" />
		    <has_text text= "A : B               C : D               C : A               C : A" />
		    <has_text text="A : B               C : D               C | A               C | A" />
		    <has_text text="A : B               C : D               C | A               C | A" />
		</assert_contents>
	    </output>
	    <output name="errors" file="asp.err" />
	</test>
	<test>
	    <!-- This test uses grid optional parameter -->
	    <param name="pname" value="sibs.ped"/>
	    <param name="mname" value="sibs.map"/>
	    <param name="dname" value="sibs.dat"/>
	    <param name="allelefreq" value="maxlike"/>
	    <param name="grid" value="3" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "SNP_1 SNP_2 SNP_3" />
		    <has_text text= "Family:    29 - Founders: 2  - Descendants: 4  - Bits: 6" />
		    <has_text text= "--grid [3.00]" />
		    <not_has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome">
		<assert_contents>
		    <has_text text="FAMILY 50 [Most Likely]" />
		    <has_text text="1 (F)               2 (F)              6 (2,1)             5 (2,1)" />
		    <has_text text="2  :  2             1  :  2             1  :  2             2  :  2" />
		    <has_text text="2  :  1             1  :  1             1  |  2             1  |  1" />
		    <has_text text="2  :  1             1  :  1             1  |  2             1  |  1" />
		</assert_contents>
	    </output>
	    <output name="flow">
		<assert_contents>
		    <has_text text="FAMILY 50 [Most Likely]" />
		    <has_text text="1 (F)               2 (F)              6 (2,1)             5 (2,1)" />
		    <has_text text="A : B               C : D               C : A               C : B" />
		    <has_text text="A : B               C : D               C | A               C | B" />
		    <has_text text="A : B               C : D               C | A               C | B" />
		</assert_contents>
	    </output>
	    <output name="errors">
		<assert_contents>
		    <has_text text="29          4      SNP_1" />
		    <has_text text="29          4      SNP_3" />
		    <has_text text="29          5      SNP_3" />
		    <has_text text="29          6      SNP_3" />
		</assert_contents>
	    </output>
	</test>
	<test>
	    <!-- This test uses start optional parameter along with a conditional parameter -->
	    <param name="pname" value="assoc.ped"/>
	    <param name="mname" value="assoc.map"/>
	    <param name="dname" value="assoc.dat"/>
	    <param name="allelefreq" value="founders"/>
	    <param name="start" value="2" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "--start [2.00]" />
		    <not_has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="assoc.chr" />
	    <output name="flow" file="assoc.flow" />
	    <output name="errors" file="assoc.err" />
	</test>
	<test>
	    <!-- This test uses random optional parameter along with a conditional parameter. -->
	    <param name="pname" value="basic2.ped"/>
	    <param name="mname" value="basic2.map"/>
	    <param name="dname" value="basic2.dat"/>
	    <param name="allelefreq" value="individuals"/>
	    <param name="random" value="5" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "Phenotype: some_disease [ALL] (1 family)" />
		    <has_text text= "Pos   Zmean  pvalue    delta    LOD  pvalue" />
		    <not_has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="basic2.chr" />
	    <output name="flow" file="basic2.flow" />
	    <output name="errors" file="basic2.err" />
	</test>
	<test>
	    <!-- This test uses two optional parameters along with a conditional parameter. -->
	    <param name="pname" value="error.ped"/>
	    <param name="mname" value="error.map"/>
	    <param name="dname" value="error.dat"/>
	    <param name="allelefreq" value="equal"/>
	    <param name="start" value="3" />
	    <param name="markerNames" value="true" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "Family:     2 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:    73 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:    81 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:    94 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:   136 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:   162 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "Family:   164 - Founders: 2  - Descendants: 2  - Bits: 2" />
		    <has_text text= "--start [3.00]" />
		    <has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome">
		<assert_contents>
		    <has_text text="FAMILY 200 [Most Likely]" />
		    <has_text text="1 (F)               2 (F)              4 (2,1)             3 (2,1)" />
		    <has_text text="4  :  1             4  :  1             4  :  4             1  :  1" />
		    <has_text text="3,4A :  3           4,3A :  3           4,3A | A3,4           3  |  3" />
		    <has_text text="2,4A : B4,1         4,2A : B1,4         4,2A | A2,4         1,4B | B4,1" />
		</assert_contents>
	    </output>
	    <output name="flow">
		<assert_contents>
		    <has_text text="FAMILY 200 [Most Likely]" />
		    <has_text text="  A : B               C : D               C : A               D : B" />
		    <has_text text="A : B               C : D               C | A               D | B" />
		    <has_text text="A : B               C : D               C | A               D | B" />
		    <has_text text="A : B               C : D               C | A               D \ A" />
		</assert_contents>
	    </output>
	    <output name="errors">
		<assert_contents>
		    <has_text text="2          3      MRK11    0.00352" />
		    <has_text text="2          4      MRK11    0.00352" />
		    <has_text text="73          3      MRK17    0.00983" />
		    <has_text text="73          4      MRK17    0.00983" />
		</assert_contents>
	    </output>
	</test>
	<test>
	    <!-- This test uses three optional parameters along with a conditional parameter. -->
	    <param name="pname" value="gene.ped"/>
	    <param name="mname" value="gene.map"/>
	    <param name="dname" value="gene.dat"/>
	    <param name="steps" value="3" />
	    <param name="grid" value="2" />
	    <param name="stop" value="4" />
	    <param name="randomseed" value="5" />
	    <param name="allelefreq" value="founders"/>
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "SNP-1 SNP-2 SNP-3 SNP-4 SNP-5 SNP-6 SNP-7 SNP-8" />
		    <has_text text= "--stop [4.00]" />
		    <has_text text= "--steps [3]" />
		    <has_text text= "--grid [2.00]" />
		    <not_has_text text="--markerNames [ON]" />
		    <not_has_text text="--minStep [2.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome" file="gene.chr" />
	    <output name="flow" file="gene.flow" />
	    <output name="errors" file="gene.err" />
	</test>
	<test>
	    <!-- This test uses all of the optional parameters along with a conditional paramter. -->
	    <param name="pname" value="snp-scan.ped"/>
	    <param name="mname" value="snp-scan.map"/>
	    <param name="dname" value="snp-scan.dat"/>
	    <param name="markerNames" value="true" />
	    <param name="minStep" value="5" />
	    <param name="maxStep" value="6" />
	    <param name="steps" value="2" />
	    <param name="allelefreq" value="equal"/>
	    <param name="grid" value="4" />
	    <param name="start" value="2" />
	    <param name="stop" value="3" />
	    <param name="randomseed" value="6" />
	    <output name="merlinoutput">
		<assert_contents>
		    <has_text text= "--markerNames [ON]" />
		    <has_text text= "--minStep [5.00]" />
		    <has_text text= "--maxStep [6.00]" />
		    <has_text text= "--steps [2]" />
		    <has_text text= "--grid [4.00]" />
		    <has_text text= "--start [2.00]" />
		    <has_text text= "--stop [3.00]" />
		</assert_contents>
	    </output>
	    <output name="chromosome">
		<assert_contents>
		    <has_text text= "FAMILY 500 [Most Likely]" />
		    <has_text text= "3,1A : A1,3         1,3A : A3,1         1,3A | A3,1         3,1A | A1,3" />
		    <has_text text= "4,1A : A1,4         1,4A : A4,1         1,4A | A4,1         4,1A | A1,4" />
		    <has_text text= "4,1A : A1,4         1,4A : A4,1         1,4A | A4,1         4,1A | A1,4" />
		    <has_text text= "1,3A : A3,1         3,1A : A1,3         3,1A | A1,3         1,3A | A3,1" />
		</assert_contents>
	    </output>
	    <output name="flow">
		<assert_contents>
		    <has_text text= "FAMILY 500 [Most Likely]" />
		    <has_text text= " 1 (F)               2 (F)              5 (2,1)             4 (2,1)" />
		    <has_text text= " A : B               C : D               C : A               D : B" />
		    <has_text text= "A : B               C : D               C | A               D | B" />
		    <has_text text= "A : B               C : D               C | A               D | B" />
		</assert_contents>
	    </output>
	    <output name="errors">
		<assert_contents>
		    <has_text text= "118          3  rs9510743     0.0239"/>
		    <has_text text= "197          1  rs9580624     0.0230"/>
		    <has_text text= "296          1  rs9510743    0.00914" />
		</assert_contents>
	    </output>
	</test>
    </tests>
    <help>
	<![CDATA[
		 MERLIN 1.1.2 - (c) 2000-2007 Goncalo Abecasis

References for this version of Merlin:

Abecasis et al (2002) Nat Gen 30:97-101        [original citation]
Fingerlin et al (2004) AJHG 74:432-43          [case selection for association studies]
Abecasis and Wigginton (2005) AJHG 77:754-67   [ld modeling, parametric analyses]
Fingerlin et al (2006) Gen Epidemiol 30:384-96 [sex-specific maps]
Chen and Abecasis (2007) AJHG 81:913-26        [qtl association analysis, qtl simulation]


The following parameters are in effect:
Data File :      merlin.dat (-dname)
Pedigree File :      merlin.ped (-pname)
Missing Value Code :         -99.999 (-xname)
Map File :      merlin.map (-mname)
Allele Frequencies : ALL INDIVIDUALS (-f[a|e|f|m|file])
Random Seed :          123456 (-r9999)

Data Analysis Options
General : --error, --information, --likelihood, --model [param.tbl]
IBD States : --ibd, --kinship, --matrices, --extended, --select
NPL Linkage : --npl, --pairs, --qtl, --deviates, --exp
VC Linkage : --vc, --useCovariates, --ascertainment, --unlinked [0.00]
Association : --infer, --assoc, --fastAssoc, --filter, --custom [cov.tbl]
Haplotyping : --best, --sample, --all, --founders, --horizontal
Recombination : --zero, --one, --two, --three, --singlepoint
Positions : --steps, --maxStep, --minStep, --grid, --start, --stop
LD Clusters : --clusters [], --distance, --rsq, --cfreq
Limits : --bits [24], --megabytes, --minutes
Performance : --trim, --noCoupleBits, --swap, --smallSwap
Output : --quiet, --markerNames, --frequencies, --perFamily, --pdf,
--tabulate, --prefix [merlin]
Simulation : --simulate, --reruns, --save, --trait []


FATAL ERROR - The datafile merlin.dat cannot be opened
 ]]>

	    
    </help>
    <citations>
    </citations>
</tool>
