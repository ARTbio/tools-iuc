<tool id="kofam_scan" name="kofamscan" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>Gene function annotation tool based on KEGG Orthology and hidden Markov model</description>
    <macros>
        <token name="@TOOL_VERSION@">1.3.0</token>    
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="3.3.1">hmmer</requirement>
        <requirement type="package" version="20200922">parallel</requirement>
        <requirement type="package" version="2.7.2">ruby</requirement>
    </requirements>
    <version_command><![CDATA[
exec_annotation | grep "exec_annotation version" | cut -d" " -f 4
    ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
exec_annotation
'$fasta_file'
-o 'result'
-k '$k'
mkdir input &&
#if $profile.profile_sel == 'multi'
    #for $i, $current in enumerate($profile.input)
        ln -s '${current}' '/input/input_${i}.${input.datatype.file_ext}'
    #end for
    -p $input
#else if $profile.profile_sel == 'single'
    -p '$p'
#end if
-o '$result'
#if $cpu_number != ''
    --cpu $cpu_number
#end if
#if $evalue != ''
    -E $evalue
#end if
#if $threshold != ''
    -T $threshold
#end if
-f $f
'$report_annotation'
'$selected'
'$keep_tabular'
'$keep_output'
    ]]></command>
    <inputs>
        <param name="fasta_file" type="data" format="fasta" label="Query file" help="A query file is a FASTA file with one or more amino acid sequences. You cannot use nucleotide sequences"/>
        <param name="k" type="data" format="txt" label="KO List"/>
        <conditional name="profile">
            <param name="profile_sel" type="select" label="Select for the Profile(s)">
                <option value="single" selected="true">Single HMM file</option>
                <option value="multi">Use Multiple HMM files</option>
            </param>
            <when value="single">
                <param name="p" type="data" format="hmm" label="Profile"/>
            </when>
            <when value="multi">
                <param name="p" type="data" format="hmm, hal" multiple="true" label="Profile"/>
            </when>
        </conditional>
        <param name="cpu_number" argument="--cpu" type="integer" value="" optional="true" label="Number of hmmsearch processes (CPU)"/>
        <param name="evalue" argument="-E" type="float" value="" optional="true" label="Require E-value"/>
        <param name="threshold" argument="-T" type="integer" value="" optional="true" label="threshold-scale"/>
        <param name="f" type="select" label="Set the format of the output">
            <option value="detail" selected="true">detail</option>
            <option value="detail-tsv">detail-tsv</option>
            <option value="mapper">mapper</option>
            <option value="mapper-one-line">mapper-oneline</option>
            <help>
                detail: Default format.
                detail-tsv: Tab separated values for detail format.
                mapper: Format which can be used for KEGG Mapper input.
                mapper-one-line: Similar to mapper, but when more than one KO are assigned to a gene, all assigned KO are shown in one line separated by tabs.
           </help>
        </param>
        <param name="report_annotation" type="select" label="Reporting gene names (report-unannotated)?">
                <option value="--no-report-unannotated" selected="true">No</option>
                <option value="--report-unannotated">Yes</option>
            <help>
                With --report-unannotated option, gene names are shown even when no KO is assigned (default when --format=mapper(-oneline)). With --no-report-unannotated such genes are not shown at all (default when --format=detail).
            </help>
        </param>
        <param name="selected" type="select" label="Select one (or none) of the option">
            <option value="--create-alignment">--create-alignment</option>
            <option value="--reannotate">--reannotation</option>
            <help>
                --create-alignment: hmmsearch's normal outputs per profile are stored in the temporary directory. Not compatible with --reannotation
                -r, --reannotation: Skip hmmsearch and assume that hmmsearch outputs are already in the temporary directory. Not compatible with --create-alignment
           </help>
        </param>
        <param name="keep_tabular" type="boolean" truevalue="--keep-tabular" falsevalue="" label="Want keep tabular option?" help="Neither create tabular.txt nor delete K number files"/>
        <param name="keep_output" type="boolean" truevalue="--keep-output" falsevalue="" label="Want keep output option?" help="Neither create output.txt nor delete K number files"/>
    </inputs>
    <outputs>
        <data name="result" format="txt" label="${tool.name} on ${on_string} report file" />
    </outputs>
    <tests>
        <!-- with single hmm file and default parameters -->
        <test>
            <param name="fasta_file" value="protein_in.fasta" />
            <param name="k" value="ko_list" />
            <conditional name="profile">
                <param name="profile_sel" value="single"/>
                <param name="p" value="K00001.hmm"/>
            </conditional>
            <output name="result">
                <assert_contents>
                    <has_n_lines n="5"/>
                    <has_line line="  sp|P00325|ADH1B_HUMAN  K00001  361.33  344.3  4.7e-106 alcohol dehydrogenase [EC:1.1.1.1]"/>
                </assert_contents>
            </output>
        </test>
        <!-- with single hmm file and parameters -->
        <test>
            <param name="fasta_file" value="protein_in.fasta"/>
            <param name="k" value="ko_list"/>
            <conditional name="profile">
                <param name="profile_sel" value="single"/>
                <param name="p" value="K00001.hmm"/>
            </conditional>
            <param name="evalue" value="5e-106"/>
            <param name="threshold" value="0"/>
            <param name="report_annotation" value="--report-unannotated"/>
            <param name="f" value="mapper"/>
            <output name="result">
                <assert_contents>
                    <has_n_lines n="7"/>
                    <has_line line="sp|P00338-2|LDHA_HUMAN"/>
                </assert_contents>
            </output>
        </test>
        <!-- with multi hmm files and default parameters -->
        <test>
            <param name="fasta_file" value="protein_in.fasta" />
            <param name="k" value="ko_list" />
            <conditional name="profile">
                <param name="profile_sel" value="multi"/>
                <param name="p" value="profiles"/>
            </conditional>
            <output name="result">
                <assert_contents>
                    <has_n_lines n="5"/>
                    <has_line line="  tr|K7D361|K7D361_PANTR K00001  361.33  343.7  6.8e-106 alcohol dehydrogenase [EC:1.1.1.1]"/>
                </assert_contents>
            </output>
        </test>
        <!-- with multi hmm files and parameters -->
        <test>
            <param name="fasta_file" value="protein_in.fasta"/>
            <param name="k" value="ko_list"/>
            <conditional name="profile">
                <param name="profile_sel" value="multi"/>
                <param name="p" value="profiles"/>
            </conditional>
            <param name="evalue" value="5e-106"/>
            <param name="threshold" value="0"/>
            <param name="report_annotation" value="--report-unannotated"/>
            <output name="result">
                <assert_contents>
                    <has_n_lines n="9"/>
                    <has_line line="* sp|P00325|ADH1B_HUMAN  K00001  361.33  344.3  4.7e-106 alcohol dehydrogenase [EC:1.1.1.1]"/>
                </assert_contents>
            </output>
        </test>
        <!-- with multi hmm files and different parameters -->
        <test>
            <param name="fasta_file" value="protein_in.fasta"/>
            <param name="k" value="ko_list"/>
            <conditional name="profile">
                <param name="profile_sel" value="multi"/>
                <param name="p" value="profiles"/>
            </conditional>
            <param name="evalue" value="5e-106"/>
            <param name="threshold" value="0"/>
            <param name="report_annotation" value="--report-unannotated"/>
            <param name="f" value="mapper"/>
            <param name="selected" value="--reannotate"/>
            <param name="keep_tabular" value="--keep-tabular"/>
            <param name="keep_output" value="--keep-output"/>
            <output name="result">
                <assert_contents>
                    <has_n_lines n="7"/>
                    <has_line line="sp|P00340|LDHA_CHICK"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[

**What it does**

KofamScan is a gene function annotation tool based on KEGG Orthology and hidden Markov model.


**Inputs**

A query file is a FASTA file with one or more amino acid sequences. You cannot use nucleotide sequences. Each sequence must have a unique name. A name of a sequence is a string between the header symbol (">") and the first blank character (whitespace, tab, line break, etc.). Do not put a whitespace right after ">".


**Outputs**

It outputs a text file.


**References**

More information are available on `GitHub <https://github.com/takaram/kofam_scan>`_ and the `webserver <https://www.genome.jp/tools/kofamkoala/>`.
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btz859</citation>
    </citations>
</tool>