<tool id="lofreq_call" name="Call variants" version="@TOOL_VERSION@">
    <description>with LoFreq</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        ## prepare reference genome and mapped reads input
        @PREPARE_REF@
        ln -s '$alignments' alignments.bam &&
        ln -s -f '${alignments.metadata.bam_index}' alignments.bam.bai &&

        ## call variants with lofreq

        ## make lofreq stick to tool contract by
        ## generating tmp output inside job working dir
        mkdir pp-tmp &&
        export TMPDIR=pp-tmp &&

        lofreq call-parallel

        --ref reference.fa --out variants.vcf --pp-threads \${GALAXY_SLOTS:-1}

            #if $advanced_options.option_selector == 'yes'
                #if $advanced_options.regions.bed
                    --bed '$advanced_options.regions.bed'
                #end if
                #if $advanced_options.source_qual.ign_vcf
                    --ign-vcf '$advanced_options.source_qual.ign_vcf'
                #end if
                #if $advanced_options.regions.region
                    --region $advanced_options.regions.region
                #end if
                #if $advanced_options.pval.bonf
                    --bonf $advanced_options.pval.bonf
                #else
                    --bonf dynamic
                #end if
                --min-bq $advanced_options.bc_quals.min_bq
                --min-alt-bq $advanced_options.bc_quals.min_alt_bq
                --def-alt-bq $advanced_options.bc_quals.def_alt_bq
                --min-jq $advanced_options.bc_quals.min_jq
                --min-alt-jq $advanced_options.bc_quals.min_alt_jq
                --def-alt-jq $advanced_options.bc_quals.def_alt_jq
                --min-mq $advanced_options.map_quals.min_mq
                --max-mq $advanced_options.map_quals.max_mq
                --def-nm-q $advanced_options.source_qual.def_nm_q
                --sig $advanced_options.pval.sig
                --min-cov $advanced_options.misc.min_cov
                --max-depth $advanced_options.misc.max_depth
                $advanced_options.align_quals.no_baq
                $advanced_options.align_quals.no_idaq
                $advanced_options.align_quals.del_baq
                $advanced_options.align_quals.no_ext_baq
                $advanced_options.map_quals.no_mq
                $advanced_options.indels.call_indels
                $advanced_options.indels.only_indels
                $advanced_options.source_qual.src_qual
                $advanced_options.misc.use_orphan
                $advanced_options.misc.plp_summary_only
                $advanced_options.misc.no_default_filter
            #end if
        alignments.bam 2>&1

        ## in case of errors add the log files produced
        ## by the parallel workers to stderr
        || (tool_exit_code=\$? && cat pp-tmp/lofreq2_call_parallel*/*.log 1>&2 && exit \$tool_exit_code)
    ]]></command>
    <inputs>
        <param type="data" name="alignments" format="bam" label="Input reads in BAM format" />
        <expand macro="reference_interface" />
        <conditional name="advanced_options">
            <param name="option_selector" type="select" label="Advanced options">
                <option value="no" selected="true">Use defaults</option>
                <option value="yes">Specify parameters</option>
            </param>
            <when value="no" />
            <when value="yes">
                <section name="regions" title="Regions" expanded="false">
                    <param argument="--bed" type="data" format="bed" optional="true" label="BED file with regions to examine" />
                    <param argument="--region" type="text" label="Limit calls to this region" />
                </section>
                <section name="bc_quals" title="Base-calling quality" expanded="false">
                    <param name="min_bq" argument="--min-bq" type="integer" value="6" label="Mimimum baseQ" />
                    <param name="min_alt_bq" argument="--min-alt-bq" type="integer" value="6" label="Mimimum baseQ for alternate bases" />
                    <param name="def_alt_bq" argument="--def-alt-bq" type="integer" value="0" label="Overwrite baseQs of alternate bases with this value" />
                    <param name="min_jq" argument="--min-jq" type="integer" value="0" label="Minimum joinedQ" />
                    <param name="min_alt_jq" argument="--min-alt-jq" type="integer" value="0" label="Minimum joinedQ for alternate bases" />
                    <param name="def_alt_jq" argument="--def-alt-jq" type="integer" value="0" label="Overwrite joinedQs of alternate bases with this value" />
                </section>
                <section name="align_quals" title="Base alignment quality" expanded="false">
                    <param name="no_baq" argument="--no-baq" type="boolean" truevalue="--no-baq" falsevalue="" label="Disable use of base-alignment quality" />
                    <param name="no_idaq" argument="--no-idaq" type="boolean" truevalue="--no-idaq" falsevalue="" label="Don't use IDAQ values" />
                    <param name="del_baq" argument="--del-baq" type="boolean" truevalue="--del-baq" falsevalue="" label="Delete pre-existing BAQ values" help="Computes BAQ values regardless of their presence in the input BAM" />
                    <param name="no_ext_baq" argument="--no-ext-baq" type="boolean" truevalue="--no-ext-baq" falsevalue="" label="Do not use external BAQ" help="Use 'normal' BAQ (samtools default) instead of extended BAQ (both computed on the fly if not already present in lb tag)" />
                </section>
                <section name="map_quals" title="Mapping quality" expanded="false">
                    <param name="min_mq" argument="--min-mq" type="integer" value="0" label="Minimum mapping quality" />
                    <param name="max_mq" argument="--max-mq" type="integer" value="255" label="Maximum mapping quality" />
                    <param name="no_mq" argument="--no-mq" type="boolean" truevalue="--src-qua" falsevalue="" label="Don't merge mapping quality" />
                </section>
                <section name="indels" title="Indels" expanded="false">
                    <param name="call_indels" argument="--call-indels" type="boolean" truevalue="--call-indels" falsevalue="" label="Enable indel calls" help="Note: This adds a preprocessing step to include indel alignment qualities" />
                    <param name="only_indels" argument="--only-indels" type="boolean" truevalue="--only-indels" falsevalue="" label="Only call indels; no SNVs" />
                </section>
                <section name="source_qual" title="Source quality" expanded="false">
                    <param name="ign_vcf" argument="--ign-vcf" type="data" format="vcf" optional="true" label="Ignore variants in this vcf file for source quality computation. Multiple files can be given separated by commas" />
                    <param name="src_qual" argument="--src-qual" type="boolean" truevalue="--src-qua" falsevalue="" label="Enable computation of source quality" />
                    <param name="def_nm_q" argument="--def-nm-q" type="integer" value="-1" label="Replace non-match base qualities with this value" />
                </section>
                <section name="pval" title="P-values" expanded="false">
                    <param argument="--sig" type="float" value="0.01" label="P-Value cutoff" />
                    <param argument="--bonf" type="integer" optional="true" label="Bonferroni factor" help="Leave unset to increase the factor per performed test or specify a factor here" />
                </section>
                <section name="misc" title="Other options" expanded="false">
                    <param name="min_cov" argument="--min-cov" type="integer" value="1" label="Test only positions having at least this coverage" />
                    <param name="max_depth" argument="--max-depth" type="integer" value="1000000" label="Cap coverage at this depth" />
                    <param name="use_orphan" argument="--use-orphan" type="boolean" truevalue="--use-orphan" falsevalue="" label="Count anomalous read pairs" />
                    <param name="plp_summary_only" argument="--plp-summary-only" type="boolean" truevalue="--plp-summary-only" falsevalue="" label="No variant calling, just output pileup summary per column" />
                    <param name="no_default_filter" argument="--no-default-filter" type="boolean" truevalue="--no-default-filter" falsevalue="" label="Don't run default 'lofreq filter' automatically after calling variants" />
                </section>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="variants" from_work_dir="variants.vcf" format="vcf" />
    </outputs>
    <tests>
        <test>
            <param name="alignments" ftype="bam" value="lofreq-in1.bam" />
            <param name="ref_selector" value="history" />
            <param name="ref" ftype="fasta" value="hxb2.fa" />
            <output name="variants" file="lofreq-out1.vcf" lines_diff="2" />
        </test>
        <test>
            <param name="alignments" ftype="bam" value="lofreq-in2.bam" />
            <param name="ref_selector" value="history" />
            <param name="option_selector" value="yes" />
            <param name="max_depth" value="1000" />
            <param name="ref" ftype="fasta" value="hxb2.fa" />
            <output name="variants" file="lofreq-out2.vcf" lines_diff="2" />
        </test>
        <test>
            <param name="alignments" ftype="bam" value="lofreq-in3.bam" />
            <param name="ref_selector" value="history" />
            <param name="option_selector" value="yes" />
            <param name="call_indels" value="true" />
            <param name="ref" ftype="fasta" value="hxb2.fa" />
            <output name="variants" file="lofreq-out3.vcf" lines_diff="2" />
        </test>
        <test>
            <param name="alignments" ftype="bam" value="lofreq-in4.bam" />
            <param name="ref_selector" value="history" />
            <param name="option_selector" value="yes" />
            <param name="min_cov" value="150" />
            <param name="ref" ftype="fasta" value="hxb2.fa" />
            <output name="variants" file="lofreq-out4.vcf" lines_diff="2" />
        </test>
    </tests>
    <help><![CDATA[
lofreq call: call variants from BAM file

Usage: lofreq call [options] in.bam

Options:

- Reference:
    -f | --ref FILE              Indexed reference fasta file (gzip supported) [null]

- Output:
    -o | --out FILE              Vcf output file [- = stdout]

- Regions:
    -r | --region STR            Limit calls to this region (chrom:start-end) [null]
    -l | --bed FILE              List of positions (chr pos) or regions (BED) [null]

- Base-call quality:
    -q | --min-bq INT            Skip any base with baseQ smaller than INT [6]
    -Q | --min-alt-bq INT        Skip alternate bases with baseQ smaller than INT [6]
    -R | --def-alt-bq INT        Overwrite baseQs of alternate bases (that passed bq filter) with this value (-1: use median ref-bq; 0: keep) [0]
    -j | --min-jq INT            Skip any base with joinedQ smaller than INT [0]
    -J | --min-alt-jq INT        Skip alternate bases with joinedQ smaller than INT [0]
    -K | --def-alt-jq INT        Overwrite joinedQs of alternate bases (that passed jq filter) with this value (-1: use median ref-bq; 0: keep) [0]

- Base-alignment (BAQ) and indel-aligment (IDAQ) qualities:
    -B | --no-baq                Disable use of base-alignment quality (BAQ)
    -A | --no-idaq               Don't use IDAQ values (NOT recommended under ANY circumstances other than debugging)
    -D | --del-baq               Delete pre-existing BAQ values, i.e. compute even if already present in BAM
    -e | --no-ext-baq            Use 'normal' BAQ (samtools default) instead of extended BAQ (both computed on the fly if not already present in lb tag)

- Mapping quality:
    -m | --min-mq INT            Skip reads with mapping quality smaller than INT [0]
    -M | --max-mq INT            Cap mapping quality at INT [255]
    -N | --no-mq                 Don't merge mapping quality in LoFreq's model

- Indels:
    --call-indels           Enable indel calls (note: preprocess your file to include indel alignment qualities!)
    --only-indels           Only call indels; no SNVs

- Source quality:
    -s | --src-qual              Enable computation of source quality
    -S | --ign-vcf FILE          Ignore variants in this vcf file for source quality computation. Multiple files can be given separated by commas
    -T | --def-nm-q INT          If >= 0, then replace non-match base qualities with this default value [-1]

- P-values:
    -a | --sig                   P-Value cutoff / significance level [0.010000]
    -b | --bonf                  Bonferroni factor. 'dynamic' (increase per actually performed test) or INT ['dynamic']

- Misc.:
    -C | --min-cov INT           Test only positions having at least this coverage [1]
                                (note: without --no-default-filter default filters (incl. coverage) kick in after predictions are done)
    -d | --max-depth INT         Cap coverage at this depth [1000000]
         --illumina-1.3          Assume the quality is Illumina-1.3-1.7/ASCII+64 encoded
         --use-orphan            Count anomalous read pairs (i.e. where mate is not aligned properly)
         --plp-summary-only      No variant calling. Just output pileup summary per column
         --no-default-filter     Don't run default 'lofreq filter' automatically after calling variants
         --force-overwrite       Overwrite any existing output
         --verbose               Be verbose
         --debug                 Enable debugging

]]></help>
    <expand macro="citations" />
</tool>
