<tool id="swift" name="Swiftlink" version="1.0" >
    <description>Parallel MCMC Linkage Analysis</description>
    <requirements>
	<requirement type="package" version="1.0">swiftlink</requirement>
    </requirements>
    <command detect_errors='exit_code'><![CDATA[
## #set cores='\${GALAXY_SLOTS:-3}'
#set cores = '3'  

swiftlink
 -p '${inp_ped}'
 -m '${inp_map}'
 -d '${inp_dat}'
 '${misc.X}'
 '${misc.a}'
 -q '${misc.q}'
 -c '${cores}'
 
#if $misc.r
 -r '${misc.r}'
#end if

#if $elod.e
 '${elod.e}'
 -f '${elod.f}'
 -w '${elod.w}'
 -k '${elod.k}'
 -u '${elod.u}' 2> ${out_elod}   ## stderr and stdout switched for some reason...
#else
 -i '${mcmc.i}'
 -b '${mcmc.b}'
 -s '${mcmc.s}'
 -x '${mcmc.x}'
 -l '${mcmc.l}'
 -n '${mcmc.n}'
 -R '${mcmc.R}'
 -o swiftlink.out
## && mv swiftlink.out '${out_fparam}'
#end if

    ]]>
    </command>

    <inputs>
	<param name="inp_ped" type="data" format="linkage_pedin" label="Pedigree" />
	<param name="inp_dat" type="data" format="linkage_recomb" label="Recombination Freqs."/>
	<param name="inp_map" type="data" format="linkage_map" label="Marker Positions"/>

	<section name="mcmc" title="MCMC Options" expanded="true" >
            <param argument="-i" type="integer" min="1" value="50000" label="Iterations" />
            <param argument="-b" type="integer" min="1" value="50000" label="Burn-ins" />
            <param argument="-s" type="integer" min="1" value="1000" label="Sequential Imputation" />
            <param argument="-x" type="integer" min="1" value="10" label="Scoring Period" />
            <param argument="-n" type="integer" min="1" value="5" label="Lod Scores" />
            <param argument="-R" type="integer" min="1" value="1" label="Runs" />
            <param argument="-l" type="float" min="0" max="1" value="0.5" label="L-Sampler Probability" />
        </section>

        <section name="elod" title="Expected LOD (ELOD) Options" expanded="true" >
            <param argument="-e" type="boolean" truevalue="-e" falsevalue="" value="false"
                   label="Calculate Expected LOD scores from pedigree only." />
            <param argument="-f" type="float" min="0" max="1" value="1.0e-04" label="Frequency" />
            <param argument="-w" type="float" min="0" max="1" value="0.5" label="Seperation" />
            <param argument="-k" type="text" value="0.00,0.00,1.00" label="Penetrance List" />
            <param argument="-u" type="integer" min="1" value="1000000" label="Replicates" />
        </section>

        <section name="misc" title="Miscellaneous" expanded="true" >
            <param argument="-X" type="boolean" truevalue="-X" falsevalue="" value="false" label="X-linked"/>
            <param argument="-a" type="boolean" truevalue="-a" falsevalue="" value="false" label="Affecteds only"/>
            <param argument="-q" type="integer" min="1" value="1000000" label="Peel-sequence Iterator"/>
            <param argument="-r" type="data" format="txt" label="Random seeds (single-column)" optional="true" />
        </section>
    </inputs>

    <outputs>
	<data name="out_fparam" format="allegro_linkage" label="${tool.name} on ${on_string}: MPT Linkage File" />
        <data name="out_elod" format="txt" label="${tool.name} on ${on_string}: Elod score" />
    </outputs>

    <tests>
	<!-- <test> -->
	<!--     <param name="inp_ped" value="pedin.21" /> -->
	<!--     <param name="inp_dat" value="datain.21" /> -->
	<!--     <param name="inp_map" value="map.21" /> -->
            
	<!--     <param name="e" value="true" /> -->
        <!--     <output name="out_elod" > -->
        <!--         <assert_contents> -->
        <!--             <has_text_matching expression='sex-linked = false' /> -->
        <!--             <has_text_matching expression='Total\s+\|\s+\d+\.\d+\s*' /> -->
        <!--         </assert_contents> -->
        <!--     </output>                 -->
	<!-- </test> -->
	<test>
	    <param name="inp_ped" value="pedin.21" />
	    <param name="inp_dat" value="datain.21" />
	    <param name="inp_map" value="map.21" />
            
            <param name="b" value="5000" />
            <param name="i" value="100" />
            <param name="x" value="100" />
            
            <output name="out_fparam" >
                <assert_contents>
                    <has_text_matching expression="" />
                </assert_contents>
            </output>                
	</test>
    </tests>
    <help>
SwiftLink performs multipoint parametric linkage analysis on large consanguineous pedigrees and is primarily targeted at pedigrees that cannot be analysed by a Lander-Green algorithm based program, i.e. many markers, but larger pedigrees. The current version of SwiftLink only supports SNP markers.
    </help>
    <citations>
	<citation type="doi">10.1093/bioinformatics/bts704</citation>
    </citations>
</tool>
