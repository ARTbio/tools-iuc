<?xml version="1.0"?>
<tool id="medaka_tool-diploid2haploid" name="medaka: diploid2haploid" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>splits diploid VCF</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize
        ln -s '$vcf' 'sample.vcf' &&

        ## run
        medaka tools diploid2haploid
        ## optional
        --debug
        $op.notrim
        ## required
        'sample.vcf'
        ]]></command>
    <inputs>
        <expand macro="vcf"/>
        <section name="op" title="Optional parameters" expanded="true">
            <param argument="--notrim" type="boolean" truevalue="--notrim" falsevalue="" label="Do not trim variant to minimal ref and alt and update pos?"/>
        </section>
    </inputs>
    <outputs>
        <data name="out_result_1" format="vcf" from_work_dir="sample_hap1.vcf" label="${tool.name} on ${on_string}: Haploid sample 1"/>
        <data name="out_result_2" format="vcf" from_work_dir="sample_hap2.vcf" label="${tool.name} on ${on_string}: Haploid sample 2"/>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="2">
            <param name="vcf" value="sample.vcf"/>
            <output name="out_result_1">
                <assert_contents>
                    <has_n_lines n="203"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;.&#009;&#009;GT&#009;1/1"/>
                </assert_contents>
            </output>
            <output name="out_result_2">
                <assert_contents>
                    <has_n_lines n="203"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;.&#009;&#009;GT&#009;1/1"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 -->
        <test expect_num_outputs="2">
            <param name="vcf" value="sample.vcf"/>
            <section name="op">
                <param name="notrim" value="true"/>
            </section>
            <output name="out_result_1">
                <assert_contents>
                    <has_n_lines n="203"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;.&#009;&#009;GT&#009;1/1"/>
                </assert_contents>
            </output>
            <output name="out_result_2">
                <assert_contents>
                    <has_n_lines n="203"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;.&#009;&#009;GT&#009;1/1"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

This module splits a diploid VCF into two haploid VCFs.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>