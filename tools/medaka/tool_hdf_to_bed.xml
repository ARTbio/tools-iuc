<?xml version="1.0"?>
<tool id="medaka_tool-hdf-to-bed" name="medaka: HDF to BED" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>of spanned regions</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        medaka tools hdf_to_bed
        ## optional
        --debug
        ## required
        #for $current in $inputs
            '$current'
        #end for
        'result.bed' ## output
        |& tee 'log.txt'
        ]]></command>
    <inputs>
        <param argument="inputs" type="data" format="data" multiple="true" label="Select consensus file(s)"/>
        <section name="op" title="Optional parameters" expanded="true">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="">
                <option value="result" selected="true">Result</option>
                <option value="log">Log</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="out_result" format="bed" from_work_dir="result.bed" label="${tool.name} on ${on_string}: Result">
            <filter>'result' in op['out']</filter>
        </data>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log">
            <filter>'log' in op['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="inputs" value="sample.hdf5"/>
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="6"/>
                    <has_line line="tig00000014&#009;105589&#009;132931"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 -->
        <test expect_num_outputs="2">
            <param name="inputs" value="sample.hdf5"/>
            <section name="op">
                <param name="out" value="result,log"/>
            </section>
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="6"/>
                    <has_line line="tig00000014&#009;105589&#009;132931"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n="4"/>
                    <has_text_matching expression=".+All done.+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

This module writes a BED file of regions spanned by a HDF file.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>