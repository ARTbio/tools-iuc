<?xml version="1.0"?>
<macros>
    <token name="@TOOL_VERSION@">1.0.1</token>
    <token name="@WRAPPER_VERSION@">galaxy0</token>
    <token name="@PROFILE@">19.01</token>
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="@TOOL_VERSION@">medaka</requirement>
            <requirement type="package" version="1.0.3">pandas</requirement> <!-- should be stored in recipe -->
        </requirements>
    </xml>
    <xml name="version_command">
        <version_command>medaka --version</version_command>
	</xml>
    <xml name="citations">
        <citations>
            <citation type="bibtex">@online{medaka,
              author = {Oxford Nanopore Technologies Ltd.},
              title = {medaka},
              year = 2020,
              url = {https://github.com/nanoporetech/medaka},
              urldate = {2020-05-06}
            }</citation>
        </citations>
    </xml>
    <!-- 
        command
    -->
    <!-- 
        configfile - parser cannot handle indents
    -->
    <!--
        input 
    -->
    <xml name="disable_cudnn">
        <param argument="--disable_cudnn" type="boolean" truevalue="--disable_cudnn" falsevalue="" label="Disable use of cuDNN model layers?"/>
    </xml>

    <token name="@MODEL@">
        #if $op.model
            --model '$op.model'
        #end if
    </token>
    <xml name="verbose">
        <param argument="--verbose" type="boolean" truevalue="--verbose" falsevalue="" label="Populate VCF info fields?"/>
    </xml>
    <xml name="vcf">
        <param argument="vcf" type="data" format="vcf" label="Select input file"/>
    </xml>
    <xml name="ref_fasta">
        <conditional name="reference_source">
            <param name="reference_source_selector" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options. See `Indexes` section of help below. If you would like to perform self-mapping select `history` here, then choose your input file as reference.">
                <option value="cached">Use a built-in genome index</option>
                <option value="history">Use a genome from history and build index</option>
            </param>
            <when value="cached">
                <param name="ref_file" type="select" label="Using reference genome" help="Select genome from the list">
                    <options from_data_table="all_fasta">
                        <filter type="sort_by" column="2" />
                        <validator type="no_options" message="No reference genomes are available" />
                    </options>
                    <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file"/>
                </param>
            </when>
            <when value="history">
                <param name="ref_file" type="data" format="fasta,fastq" label="Use the following dataset as the reference sequence" help="You can upload a FASTA or FASTQ sequence to the history and use it as reference" />
            </when>
        </conditional>
    </xml>
    <token name="@REF_FASTA@">
        #if $reference_source.reference_source_selector == 'history':
            ln -f -s '$reference_source.ref_file' reference.fa &&
        #else:
            ln -f -s '$reference_source.ref_file.fields.path' reference.fa &&
        #end if
    </token>
    <xml name="bam">
        <param argument="bam" type="data" format="bam" label="Select alignment file"/>
    </xml>
    <xml name="regions_text">
        <param argument="--regions" type="text" value="" optional="true" label="Set reference names to limit variant calling"/>
    </xml>
    <xml name="regions">
        <conditional name="regions_cond" label="Genomic regions to analyse">
            <param name="regions_sel" type="select" label="Choose input type">
                <option value="custom">Custom input</option>
                <option value="bed">BED file</option>             
            </param>
            <when value="custom">
                <param argument="custom" type="text" value="" optional="true" label="Set genomic regions to analyse"/>
            </when>
            <when value="bed">
                <param argument="bed" type="data" format="bed" optional="true" multiple="true" label="Select file with genomic regions to analyse"/>
            </when>
        </conditional>
    </xml>
    <token name="@REGIONS@">
        #if $op.cond_regions.custom || $op.cond_regions.bed
            --regions 
            #if $op.regions_cond.regions_sel == 'custom'
                '$op.cond_regions.custom'
            #else if
                '$op.cond_regions.bed'
            #end if
        #end if
    </token>
    <xml name="model" token_argument="-m" token_label="">
        <!-- todo different defaults -->
        <param argument="@ARGUMENT@" type="select" label="@LABEL@">
            <option value="r103_min_high_g345">r103_min_high_g345</option>
            <option value="r103_min_high_g360">r103_min_high_g360</option>
            <option value="r103_prom_high_g360">r103_prom_high_g360</option>
            <option value="r103_prom_snp_g3210">r103_prom_snp_g3210</option>
            <option value="r103_prom_variant_g3210">r103_prom_variant_g3210</option>
            <option value="r10_min_high_g303">r10_min_high_g303</option>
            <option value="r10_min_high_g340">r10_min_high_g340</option>
            <option value="r941_min_fast_g303">r941_min_fast_g303</option>
            <option value="r941_min_high_g303">r941_min_high_g303</option>
            <option value="r941_min_high_g330">r941_min_high_g330</option>
            <option value="r941_min_high_g340_rle">r941_min_high_g340_rle</option>
            <option value="r941_min_high_g344">r941_min_high_g344</option>
            <option value="r941_min_high_g351" selected="true">r941_min_high_g351</option>
            <option value="r941_min_high_g360">r941_min_high_g360</option>
            <option value="r941_prom_fast_g303">r941_prom_fast_g303</option>
            <option value="r941_prom_high_g303">r941_prom_high_g303</option>
            <option value="r941_prom_high_g330">r941_prom_high_g330</option>
            <option value="r941_prom_high_g344">r941_prom_high_g344</option>
            <option value="r941_prom_high_g360">r941_prom_high_g360</option>
            <option value="r941_prom_snp_g303">r941_prom_snp_g303</option>
            <option value="r941_prom_snp_g322">r941_prom_snp_g322</option>
            <option value="r941_prom_variant_g303">r941_prom_variant_g303</option>
            <option value="r941_prom_variant_g322">r941_prom_variant_g322</option>
        </param>        
    </xml>
    <xml name="batch_size">
        <!-- todo min max -->
        <param argument="--batch_size" type="integer" value="100" label="Set inference batch size"/>
    </xml>
    <xml name="chunk_len">
        <!-- todo min max -->
        <param argument="--chunk_len" type="integer" value="10000" label="Set chunk length of samples"/>
    </xml>
    <xml name="chunk_ovlp" token_default="500">
        <!-- todo min max -->
        <param argument="--chunk_ovlp" type="integer" value="@DEFAULT@" label="Set overlap of chunks"/>
    </xml>


    <!--
        output 
    -->
    <!--
        Help
    -->

    <token name="@WID@"><![CDATA[
medaka is a tool to create a consensus sequence from nanopore sequencing data.

This task is performed using neural networks applied from a pileup of individual sequencing
reads against a draft assembly. It outperforms graph-based methods operating on basecalled data,
and can be competitive with state-of-the-art signal-based methods, whilst being much faster.
    ]]></token>

    <token name="@REFERENCES@"><![CDATA[
More information are available on `github <https://github.com/Illumina/strelka>`_.
    ]]></token>
</macros>