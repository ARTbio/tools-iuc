<?xml version="1.0"?>
<tool id="medaka_train" name="medaka: Train" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>training program and ancillary functions</description>    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        medaka train
        ## optional
        --debug
        --threads_io \${GALAXY_SLOTS:-4}
        --device \${GALAXY_SLOTS:-4}
        #if $ap.train_name
            --train_name $ap.train_name
        #end if
        --epochs $ap.epochs
        --batch_size $ap.batch_size
        --max_samples $ap.max_samples
        --mini_epochs $ap.mini_epochs
        #if $ap.seed
            --seed $ap.seed
        #end if
        --optimizer $ap.optimizer
        #if $ap.optim_args
            --optim_args $ap.optim_args
        #end if
        #if $ap.validation_split
            --validation_split $ap.validation_split
        #end if
        #for $i, $current
            enumerate($features)
        #end for 

        ## required
        #for $i, $current in enumerate($ap.validation_features)
            --validation_features $current
        #end for 
        |& tee log.txt
        ]]></command>
    <inputs>
        <param argument="features" type="data" format="tabular" multiple="true" label="Select training data files"/>
        <section name="ap" title="Advanced parameters">
            <param argument="--train_name" type="text" value="keras_train" label="Set name of training run"/>
            <expand macro="model"/>
           <param argument="--epochs" type="integer" value="5000" label="Set maximum number of trainig epochs" help=""/>
            <param argument="--batch_size" type="integer" value="100" label="Set training batch size"/>
            <param argument="--max_samples" type="text" value="inf" label="Set only train on max_samples"/>
            <param argument="--mini_epochs" type="integer" value="1" label="Set reduction fraction of data per epoch by this factor"/>                        
            <param argument="--seed" type="integer" value="" optional="true" label="Set seed for random batch shuffling."/>
            <param argument="--optimizer" type="select" multiple="false" label="Set optimizer to use" help="">
                <option value="rmsprop" selected="true">rmsprop</option>
                <option value="nadam">nadam</option>
            </param>
            <param argument="--optim_args" type="text" value="" optional="true" label="Set optimizer key-word arguments." help="e.g. KEY1=VAL1 KEY2=VAL2a,VAL2b,... KEY3=..."/>
            <param argument="--validation_split" type="float" value="0.2" label="Set fraction of data to validate on"/>
            <param argument="--validation_features" type="data" format="tabular" multiple="true" label="Select validation data files"/>
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="">
                <option value="result" selected="true">Result</option>
                <option value="log">Log</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log">
            <filter>'log' in ap['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="" value=""/>           
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                    <has_size value="" delta=""/>
                </assert_contents>
            </output>            
        </test>    
        <!-- #2 -->    
        <test expect_num_outputs="2">
            <param name="features"/>
            <section name="ap">
                <param name="--train_name" value=""/>
                <param name="--epochs" value=""/>
                <param name="--batch_size" value=""/>
                <param name="--max_samples" value=""/>
                <param name="--mini_epochs" value=""/>                        
                <param name="--seed" value=""/>
                <param name="--optimizer" value=""/>
                <param name="--optim_args" value=""/>
                <param name="--validation_split" value=""/>
                <param name="--validation_features" value=""/>
                <param name="out" value=""/>
            </section>
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                    <has_size value="" delta=""/>
                </assert_contents>
            </output>            
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

...

**Input**

...

::

    Courier new text

**Output**

...

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>