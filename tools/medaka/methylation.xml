<?xml version="1.0"?>
<tool id="medaka_methylation" name="medaka: Methylation" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>aggregating Guppy basecalling results</description>    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[  
        ## initialize
        @REF_FASTA@

        ## guppy2sam
        mkdir samples &&
        #for $i, $current in enumerate($path)
            ln -s '$current' 'samples/sample_${i}.fast5'
        #end for
        medaka methylation guppy2sam
        --debug
        --reference 'reference.fa'
        --workers \${GALAXY_SLOTS:-4}
        --io_workers \${GALAXY_SLOTS:-4} 
        --recursive
        'sample'

        ## calls
        medaka methylation call
        --debug
        --meth $meth
        --filter $upper $lower
        #if str($RG) != ''
            --RG $RG
        #end if
        'result.bam' ## todo result of methylation guppy2sam
        'reference.fa'
        #if str($region) != ''
            --region '$region'
        #end if
        |& tee log.txt            
        ]]></command>
    <inputs>
        <param argument="path" type="data" format="fast5" multiple="true" label="Select basecalling inputs"/>
        <expand macro="ref_fasta"/>
        <expand macro="region" label="Set region to process" help="chrom:start-end"/>
        <param argument="--meth" type="select" optional="false" label="Select metyhlation type">
            <option value="all">All</option>
            <option value="cpg" selected="true">CPG</option>
            <option value="dam">DAM</option>
            <option value="dcm">DCM</option>
        </param>
        <param argument="upper" type="integer" value="64" min="0" max="256" label="Set upper score boundary"/>
        <param argument="lower" type="integer" value="128" min="0" max="256" label="Set lower score boundary"/>
        <param argument="--RG" type="text" value="" optional="true" label="Select read group to select"/>
    </inputs>
    <outputs>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log"/>            
    </outputs>
    <tests>
        <!-- #1 default -->
        <test> <!-- todo expect_num_outputs="1"-->
            <param name="path" value="sample.fast5"/>
            <conditional name="reference_source">
                <param name="reference_source_selector" value="cached"/>
                <param name="ref_file" value="reads"/>
            </conditional>
            <param name="meth" value="all"/>
            <param name="upper" value="62"/>
            <param name="lower" value="127" />
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".*"/>
                </assert_contents>
            </output>            
        </test>                                                   
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

The methylation module is a basic workflow for aggregating Guppy basecalling results for Dcm, Dam, and CpG methylation. This program will extract both the basecall sequence and methylation scores, align the basecall to the reference, and store results in a standard format. In this preliminary workflow the methylation scores are stored in two SAM tags, ‘MC’ and ‘MA’, one each for 5mC and 6mA respectively. The tags are 8bit integer array-values, one value per basecall position.

**Input**

...

**Output**

...

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>