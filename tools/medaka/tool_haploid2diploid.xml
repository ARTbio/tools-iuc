<?xml version="1.0"?>
<tool id="medaka_tool-haploid2diploid" name="medaka: haploid2diploid" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>merges haploid VCF</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        medaka tools haploid2diploid
        ## optional    
        --debug
        $op.discard_phase
        $op.adjacent
        ## required
        '$vcf1'
        '$vcf2'
        '$ref_fasta'
        'result.vcf' ## vcfout        
        ]]></command>
    <inputs>
        <param argument="vcf1" type="data" format="vcf" label="Select first sample file"/>
        <param argument="vcf2" type="data" format="vcf" label="Select second sample file"/>
        <param argument="ref_fasta" type="data" format="fasta" label="Select reference file"/>
        <section name="op" title="Optional parameters" expanded="true">
            <param argument="--discard_phase" type="boolean" truevalue="--discard_phase" falsevalue="" label="Output unphased diploid VCF?"/>
            <param argument="--adjacent" type="boolean" truevalue="--adjacent" falsevalue="" label="Merge adjacent variants?" help="i.e. variants with non-overlapping genomic ranges instead of just overlapping ones. If set to True, all runs of adjacent variants will be merged including those which appear in just one of the input VCF."/>
        </section>
    </inputs>
    <outputs>
        <data name="out_result" format="vcf" from_work_dir="result.vcf" label="${tool.name} on ${on_string}: Diploid sample"/>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="vcf1" value="sample_hap1.vcf"/>
            <param name="vcf2" value="sample_hap2.vcf"/>
            <param name="ref_fasta" value="reference.fasta"/>
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="210"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;PASS&#009;pos1=1988;pos2=1988;q1=8.0;q2=8.0&#009;GT:GQ&#009;1|1:8.0"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 -->
        <test expect_num_outputs="1">
            <param name="vcf1" value="sample_hap1.vcf"/>
            <param name="vcf2" value="sample_hap2.vcf"/>
            <param name="ref_fasta" value="reference.fasta"/>
            <section name="op">
                <param name="discard_phase" value="true"/>
                <param name="adjacent" value="true"/>
            </section>
            <output name="out_result">
                <assert_contents>
                    <has_n_lines n="210"/>
                    <has_line line="##fileformat=VCFv4.1"/>
                    <has_line line="contig1&#009;1988&#009;.&#009;AACA&#009;A&#009;8.0&#009;PASS&#009;pos1=1988;pos2=1988;q1=8.0;q2=8.0&#009;GT:GQ&#009;1/1:8.0"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

This module merges two haploid VCF into one diploid VCF.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>