<?xml version="1.0"?>
<tool id="medaka_toolshaploid2diploid" name="medaka: tool haploid2diploid" version="@TOOL_VERSION@+@WRAPPER_VERSION@" profile="@PROFILE@">
    <description>...</description>    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
        medaka tools haploid2diploid
        ## optional    
        --debug
        $ap.discard_phase
        $ap.adjacent
        ## required
        '$vcf1'
        '$vcf2'
        '$ref_fasta'
        'results.vcf' ## vcfout
        |& tee log.txt         
        ]]></command>
    <inputs>
        <param argument="vcf1" type="data" format="vcf" label="Select first file"/>            
        <param argument="vcf2" type="data" format="vcf" label="Select second file"/>
        <param argument="ref_fasta" type="data" format="fasta" label="Select reference fasta"/>
        <section name="ap" title="Advanced parameters">
            <param argument="--discard_phase" type="boolean" truevalue="--discard_phase" falsevalue="" label="Output unphased diploid vcf?"/>
            <param argument="--adjacent" type="boolean" truevalue="--adjacent" falsevalue="" label="Merge adjacent variants?" help="i.e. variants with non-overlapping genomic ranges instead of just overlapping ones. If set to True, all runs of adjacent variants will be merged including those which appear in just one of the input VCFs."/>
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="">
                <option value="result" selected="true">Result</option>
                <option value="log">Log</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log">
            <filter>'log' in ap['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="vcf1" value=""/>
            <param name="vcf2" value=""/> 
            <param name="ref_fasta" value=""/>      
            <output name="out_log">
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                    <has_size value="" delta=""/>
                </assert_contents>
            </output>            
        </test>
        <!-- #2 -->
        <test expect_num_outputs="1">
            <param name="vcf1" value=""/>
            <param name="vcf2" value=""/> 
            <param name="ref_fasta" value=""/>    
            <section name="ap">
                <param name="discard_phase" value=""/>
                <param name="adjacent" value=""/>
                <param name="out" value=""/>
            </section>  
            <output name="out_log">          
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                    <has_size value="" delta=""/>
                </assert_contents>
            </output>            
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

...

**Input**

...

::

    Courier new text

**Output**

...

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>