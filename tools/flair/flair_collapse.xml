<tool id="flair_collapse" name="FLAIR collapse" version="1.5+galaxy2">
    <description>Defines high-confidence isoforms from flair-corrected reads.</description>
    <requirements>
        <requirement type="package" version="1.5">flair</requirement>
		<requirement type="package" version="0.0.5">kerneltree</requirement>
    </requirements>

    <version_command>flair.py --version</version_command>

    <command detect_errors="exit_code"><![CDATA[

flair.py collapse

###########
## Input ##
###########

-q '$input_query'
-r 'input_reads'
-g '$input_genome'
-f 'input_gtf'

#if str($cond_promotors.input_promotors) == "Yes":
    -p $cond_promotors.input_promotors
#end if

########################
## Additional Options ##
########################

-w $additional_options.window
-s $additional_options.support
$additional_options.stringent

#if str($additional_options.select_uniqueness) != "":
	-n str($additional_options.select_uniqueness)
#end if

$additional_options.isoform
--max_ends $additional_options.maxends
$additional_options.trustends

#if str($additional_options.select_filter) != "":
	-e str($additional_options.select_filter)
#end if

-o '${outfile}'

#########
## END ##
#########

    ]]></command>
    <inputs>
        <param name="input_query" argument="-q" type="data" format="bed" label="Corrected Reads as Bed File"/>
		<param name="input_reads" argument="-r" type="data" format="fasta,fastq" label="FASTA/FASTQ file of raw reads"/>
		<param name="input_genome" argument="-g" type="data" format="fasta" label="FASTA of Reference Genome"/>
		<param name="input_gtf" argument="-f" type="data" format="gtf" label="GTF annotation file"/>

		<conditional name="cond_promotors">
			<param name="shortread_select" type="select" label="Do you have a BED file of promotor regions to identify full-length
                        reads?" >
				<option value="No" selected="True">No</option>
				<option value="Yes">Yes</option>
			</param>
			<when value="No" />
			<when value="Yes">
				<param name="input_promotors" argument="-p" type="data" format="bed" label="BED File" />
			</when>
		</conditional>

        <!-- Additional Options -->
        <section name="additional_options" title="Additional Options">
			<param name="window" argument="-w" type="integer" min="0" value="100" label="Window Size" help="Window size for comparing TSS/TES (Default=100)" />
			<param name="support" argument="-s" type="integer" min="0" value="3" label="Supporting Reads" help="Minimum number of supporting reads for an isoform (Default=3)" />
			<param name="stringent" argument="--sringent" type="boolean" value="False" truevalue="--stringent" falsevalue="" label="Use Stringent Mode" help="Specify if all supporting reads need to be full-length (80% coverage and spanning 25 bp of the first and last exons) (Default=false)"/>
			<param name="select_uniqueness" argument="-n" type="select" label="Choose the TSS/TES for each unique set of splice junction." >
				<option value="" selected="True"></option>
				<option value="none">Best TSSs/TESs</option>
				<option value="longest">Single TSS/TES chosen to maximize length</option>
				<option value="best_only">Single most supported TSS/TES used in conjunction chosen</option>
			</param>
			<param name="isoform" argument="-i" type="boolean" value="False" truevalue="-i" falsevalue="" label="Use Isoform Mode" help="TSS/TES for each isoform will be determined from supporting reads for individual isoforms (Default=false)"/>
			<param name="maxends" argument="--max_ends" type="integer" min="0" value="2" label="Maximum Number of TSS/TES picked per isoform" help="(Default=2)" />
			<param name="trustends" argument="--trust_ends" type="boolean" value="False" truevalue="--trust_ends" falsevalue="" label="Reads are generated from a long read method with minimal fragmentation?" />
			<param name="select_filter" argument="-e" type="select" label="Filter for isoforms." >
				<option value="" selected="True"></option>
				<option value="nosubset">Any isoforms that are a proper set of another isoform are removed</option>
				<option value="default">Subset isoforms are removed based on support</option>
				<option value="comprehensive">Default set + all subset isoforms</option>
				<option value="ginormous">Comprehensive set + single exon subset isoforms</option>
			</param>
			<param name="mapq" argument="--quality" type="integer" min="0" value="1" label="Minimum MAPQ of read assignment to an isoform" help="(Default=1)" />
		</section>
    </inputs>


    <outputs>
        <data name="outfile_isoforms_bed" format="bed" label="${tool.name} on ${on_string}"/>
		<data name="outfile_isoforms_gtf" format="gtf" label="${tool.name} on ${on_string}"/>
		<data name="outfile_isoforms_fasta" format="fasta" label="${tool.name} on ${on_string}"/>
    </outputs>


    <tests>
        <!-- Test Data -->
        <test expect_num_outputs="2">
            <param name="input_query" ftype="bed" value="flair_all_corrected.bed" />
			<param name="input_reads" ftype="bed" value="EEF1A1.fastq" />
            <param name="input_genome" ftype="fasta" value="hg38.fa" />
            <param name="input_gtf" ftype="gtf" value="UCSC_Main_on_Human__knownGene_region.gtf" />
            <output name="outfile_isoforms_bed" ftype="bed" file="flair.collapse.isoforms.bed" />
            <output name="outfile_isoforms_gtf" ftype="gtf" file="flair.collapse.isoforms.gtf" />
			<output name="outfile_isoforms_fasta" ftype="fasta" file="flair.collapse.isoforms.fa" />
        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

-------------------

**FLAIR** FLAIR (Full-Length Alternative Isoform analysis of RNA) for the correction, isoform definition, and alternative splicing analysis of noisy reads. FLAIR has primarily been used for nanopore cDNA, native RNA, and PacBio sequencing reads.

FLAIR can be run optionally with short-read data to help increase splice site accuracy of the long read splice junctions. FLAIR uses multiple alignment steps and splice site filters to increase confidence in the set of isoforms defined from noisy data. FLAIR was designed to be able to sense subtle splicing changes in nanopore data from Tang et al. (2018).

It is recommended to combine all samples together prior to running flair-collapse for isoform assembly by concatenating corrected read psl or bed files together. Following the creation of an isoform reference from flair-collapse, consequent steps will assign reads from each sample individually to isoforms of the combined assembly for downstream analyses.

**flair collapse**
Defines high-confidence isoforms from corrected reads.

-------------------

**Inputs**

-------------------

(1) Corrected Reads as Bed12 File.
(2) FASTA/FASTQ file of raw reads. All raw read fastq/fasta files should be concatenated into a single file.
(3) FASTA of Reference Genome.
(4) GTF annotation file.

-----------

**Outputs**

-----------

Outputs the high-confidence isoforms in several formats:
(1) bed,
(2) gtf,
(3) FASTA.

--------------------

**More Information**

--------------------

See the excellent `FLAIR documentation`_

.. _`FLAIR documentation`: https://github.com/BrooksLabUCSC/flair


--------------------

**Galaxy Wrapper Development**

--------------------

Author: Florian Heyl <heylf@informatik.uni-freiburg.de>


    ]]></help>
    <citations>
        <citation type="bibtex">
			@article{tang2020full,
			  title={Full-length transcript characterization of SF3B1 mutation in chronic lymphocytic leukemia reveals downregulation of retained introns},
			  author={Tang, Alison D and Soulette, Cameron M and van Baren, Marijke J and Hart, Kevyn and Hrabeta-Robinson, Eva and Wu, Catherine J and Brooks, Angela N},
			  journal={Nature communications},
			  volume={11},
			  number={1},
			  pages={1--12},
			  year={2020},
			  publisher={Nature Publishing Group}
			}
        </citation>
    </citations>
</tool>
