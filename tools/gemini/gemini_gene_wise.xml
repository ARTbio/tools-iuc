<tool id="gemini_@BINARY@" name="GEMINI @BINARY@" version="@VERSION@">
    <description>Custom genotype filtering by gene</description>
    <macros>
        <import>gemini_macros.xml</import>
        <token name="@BINARY@">gene_wise</token>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command>
<![CDATA[
        gemini @BINARY@

            #if int($min_filters) > 0:
                --min-filters $min_filters
            #end if

            #for $filter in $filter_by_genotype:
                #set $multiline_sql_expr = str($filter.gt_filter)
                #if $filter.is_required:
                    #set $cmdln_param = "--gt-filter-required"
                #else:
                    #set $cmdln_param = "--gt-filter"
                #end if
                @MULTILN_SQL_EXPR_TO_CMDLN@
            #end for

            #set $report = $oformat.report
            @COLUMN_SELECT@

            #set $where_clause_elements = []
            #set $filter_cmdln_param = '--filter'
            #for $cond in $constraint:
                #if str($cond.filter).strip():
                    #silent $where_clause_elements.append(str($cond.filter).strip())
                    #if $cond.overwrite_default_filter:
                        #set $filter_cmdln_param = '--where'
                    #end if
                #end if
            #end for

            @PARSE_REGION_ELEMENTS@
            #if $region_elements:
                #silent $where_clause_elements.append(" OR ".join($region_elements))
            #end if
            #set $filter = " AND ".join($where_clause_elements)
            #if str($filter):
                $filter_cmdln_param '$filter'
            #end if

            "$infile"
            > "$outfile"
]]>
    </command>
    <inputs>
        <expand macro="infile" />
        <expand macro="gt_filter" default_repeat="1" min_repeat="1" max_repeat="999">
            <param name="is_required" type="boolean" checked="False"
            label="Make this an obligate filter that a variant has to pass to be considered"
            help="By default, a variant has to pass a minimum number of genotype filters (set below) to get reported. By making a filter required, you ensure that variants that fail this one filter are always excluded. Required filters that a variant passes do not count towards its number of passed (regular) filters" />
        </expand>
        <param name="min_filters" type="integer" value="0" min="0" label="Minimum number of filters" help="(--min-filters)" />
        <expand macro="region_filter" />
        <expand macro="insert_constraint">
            <expand macro="overwritable_where_default" default_where="exonic, high impact variants (SQL clause: is_exonic = 1 and impact_severity != 'LOW')" />
        </expand>
        <section name="oformat" title="Output - included information" expanded="true">
            <expand macro="column_filter" />
        </section>
    </inputs>
    <outputs>
        <data name="outfile" format="tabular" />
    </outputs>
    <tests>
        <test>
            <param name="infile" value="gemini_amend_input.db" ftype="gemini.sqlite" />
            <repeat name="filter_by_genotype">
                <param name="gt_filter" value="((gt_depths).(*).(>=1).(all))" />
            </repeat>
            <output name="outfile">
                <assert_contents>
                    <has_line_matching expression="variant_id&#009;gene.*" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**

The gemini query tool allows querying by variant and the inheritance tools described above enable querying by gene for fixed inheritance patterns. The gene_wise tool allows querying by gene with custom genotype filters to bridge the gap between these tools.
]]>
    </help>
    <expand macro="citations"/>
</tool>
