<tool id="edger" name="edgeR" version="3.16.5">
    <description>
        Perform differential expression of count data
    </description>

    <requirements>
        <requirement type="package" version="3.16.5">bioconductor-edger</requirement>
        <requirement type="package" version="0.4.1">r-scales</requirement>
        <requirement type="package" version="1.4.29">r-statmod</requirement>
        <requirement type="package" version="0.2.15">r-rjson</requirement>
    </requirements>

    <version_command><![CDATA[
        echo $(R --version | grep version | grep -v GNU)", edgeR version" $(R --vanilla --slave -e "library(edgeR); cat(sessionInfo()\$otherPkgs\$edgeR\$Version)" 2> /dev/null | grep -v -i "WARNING: ")
    ]]></version_command>

    <command detect_errors="exit_code"><![CDATA[
#import json
Rscript '$__tool_directory__/edger.R'

#if $cnt.input.format=="files":
   
    ## Adapted from DESeq2 wrapper
    #set $temp_factor_names = list()
    #for $factor in $cnt.input.rep_factorName:
        #set $temp_factor = list()
        #for $level in $factor.rep_factorLevel:
            #set $count_files = list()
            #for $file in $level.countsFile:
                $count_files.append(str($file))
            #end for
            $temp_factor.append( {str($level.factorLevel): $count_files} )
        #end for

        $temp_factor.reverse()
        $temp_factor_names.append([str($factor.factorName), $temp_factor])
    #end for
    '#echo json.dumps(temp_factor_names)#'
    'None'

#elif $cnt.input.format=="matrix":
    '$cnt.input.counts'

    #if $cnt.input.anno.annoOpt=='yes':
        '$cnt.input.anno.geneanno'
    #else:
        'None'
    #end if

#end if

'$outReport'
'$outReport.files_path'
$adv.rdaOption
$adv.normalisationOption
$adv.lrtOption
'$ct.contrast'

#if $flt.filterCPM.filterLowCPM=='yes':
    '$flt.filterCPM.cpmReq'
    '$flt.filterCPM.sampleReq'
#else:
    0
    0
#end if

#if $adv.testOpt.wantOpt=='yes':
    '$adv.testOpt.pAdjust'
    '$adv.testOpt.pVal'
    '$adv.testOpt.lfc'
#else:
    "BH"
    0.05
    0
#end if

$adv.normCounts

#if $cnt.input.format=="matrix":
    #if $cnt.input.fact.ffile=='yes':
        '$cnt.input.fact.finfo'
        'None'
    #else:
        'None'
        '$cnt.input.fact.pfactName::$cnt.input.fact.pfactLevel'
        #for $sfact in $cnt.input.fact.sfactors:
            '$sfact.sfactName::$sfact.sfactLevel'
        #end for
    #end if
#else:
    'None'
    'files'
#end if

&&
mkdir ./output_dir

&&
cp '$outReport.files_path'/*.tsv output_dir/
    ]]></command>

    <inputs>
        
        <section name="cnt" expanded="false" title="Input counts and factors"> 
            <conditional name="input">
                <param name="format" type="select" label="Count Files or Matrix"
                    help="Input count files (one per sample) or a count matrix">
                    <option value="files">Files</option>
                    <option value="matrix">Matrix</option>
                </param>
                    
                <when value="files">
                    <repeat name="rep_factorName" title="Factor" min="1">
                        <param name="factorName" type="text" value="FactorName" label="Factor Name" help="Eg. Genotype, Batch. The first factor entered will be used as the Primary Factor. NOTE: Please only use letters, numbers or underscores.">
                        <sanitizer>
                            <valid initial="string.letters,string.digits"><add value="_" /></valid>
                        </sanitizer>
                        </param>
                        <repeat name="rep_factorLevel" title="Factor level" min="2" default="2">
                            <param name="factorLevel" type="text" value="FactorLevel" label="Factor Levels"
                            help="Eg. WT  NOTE: Please only use letters, numbers or underscores (case sensitive). See help below for more information.">
                            <sanitizer>
                                <valid initial="string.letters,string.digits"><add value="_" /></valid>
                            </sanitizer>
                            </param>
                            <param name="countsFile" type="data" format="tabular" multiple="true" label="Counts file(s)"/>
                        </repeat>
                    </repeat>
                </when>
                    
                <when value="matrix">                
                    <param name="counts" type="data" format="tabular" label="Count Matrix"/>                  
                    <conditional name="anno">
                        <param name="annoOpt" type="select" label="Use Gene Annotations?"
                        help="If an annotation file is provided, annotations will be added to the table of differential expression results to provide descriptions for each gene.">
                            <option value="no">No</option>
                            <option value="yes">Yes</option>
                        </param>
                        <when value="yes">
                            <param name="geneanno" type="data" format="tabular" label="Gene Annotations"/>
                        </when>
                     <when value="no" />
                    </conditional>
                
                    <conditional name="fact">
                        <param name="ffile" type="select" label="Input Factor Information from file?"
                            help="You can choose to input the factor information from a file or manually enter below.">
                            <option value="no">No</option>
                            <option value="yes">Yes</option>
                        </param>
                        <when value="yes">
                            <param name="finfo" type="data" format="tabular" label="Factor Information"/>
                        </when>
                        <when value="no" >
                            <param name="pfactName" type="text" label="Primary Factor Name"
                                help="Eg. Genotype NOTE: Please only use letters, numbers or underscores.">
                                <validator type="empty_field" />
                                <validator type="regex" message="Please only use letters, numbers or underscores">^[\w]+$</validator>
                            </param>
                            <param name="pfactLevel" type="text" label="Primary Factor Levels"
                                help="Eg. WT,WT,WT,Mut,Mut,Mut NOTE: Please only use letters, numbers or underscores (case sensitive).">
                                <validator type="empty_field" />
                                <validator type="regex" message="Please only use letters, numbers or underscores, and separate levels by commas">^[\w,]+$</validator>
                            </param>
                            <repeat name="sfactors" title="Secondary Factor" >
                                <param name="sfactName" type="text" label="Secondary Factor Name" help="Eg. Batch">
                                    <validator type="empty_field" />
                                    <validator type="regex" message="Please only use letters, numbers or underscores">^[\w]+$</validator>
                                </param>
                                <param name="sfactLevel" type="text" label="Secondary Factor Levels"
                                    help="Eg. b1,b2,b3,b1,b2,b3 NOTE: Please only use letters, numbers or underscores (case sensitive).">
                                    <validator type="empty_field" />
                                    <validator type="regex" message="Please only use letters, numbers or underscores">^[\w,]+$</validator>
                                </param>
                            </repeat>
                        </when>
                    </conditional>
                </when>
            </conditional>
        </section>
            
        <section name="ct" expanded="false" title="Specify groups to contrast">  
            <param name="contrast" type="text" label="Contrasts of interest" help="Eg. Mut-WT,KD-Control">
                <validator type="empty_field" />
                <validator type="regex" message="Please only use letters, numbers or underscores">^[\w,-]+$</validator>
            </param>
        </section>
        
        <section name="flt" expanded="false" title="Filter low counts"> 
            <conditional name="filterCPM">
                <param name="filterLowCPM" type="select" label="Filter Low CPM?"
                    help="Treat genes with very low expression as unexpressed and filter out to speed up computation.">
                    <option value="yes" selected="True">Yes</option>
                    <option value="no">No</option>
                </param>
                <when value="yes">
                    <param name="cpmReq" type="float" value="0.5" min="0" label="Minimum CPM"/>
                    <param name="sampleReq" type="integer" value="1" min="0" label="Minimum Samples"
                        help="Filter out all the genes that do not meet the minimum CPM in at least this many samples."/>
                </when>
                <when value="no"/>
            </conditional>
        </section>
        
        <section name="adv" expanded="false" title="Advanced Options">
            <param name="normalisationOption" type="select" label="Select Normalisation Method">
                <option value="TMM">TMM</option>
                <option value="RLE">RLE</option>
                <option value="upperquartile">Upperquartile</option>
                <option value="none">None (Don't normalise)</option>
            </param>
            <param name="lrtOption" type="boolean" truevalue="yes" falsevalue="no" checked="false" label="Use LRT test instead of QF?" help="Use edgeR's likelihood ratio test instead of quasi-likelihood F-test"> 
            </param> 
            <conditional name="testOpt">
                <param name="wantOpt" type="select" label="Use Advanced Testing Options?"
                    help="Enable choices for p-value adjustment method, p-value threshold and log2-fold-change.">
                    <option value="no" selected="True">No</option>
                    <option value="yes">Yes</option>
                </param>
                <when value="yes">                   
                    <param name="pAdjust" type="select" label="P-Value Adjustment Method.">
                        <option value="BH">Benjamini and Hochberg (1995)</option>
                        <option value="BY">Benjamini and Yekutieli (2001)</option>
                        <option value="holm">Holm (1979)</option>
                        <option value="none">None</option>
                    </param>
                    <param name="pVal" type="float" value="0.05" min="0" max="1"
                        label="Adjusted Threshold"
                        help="Genes below this threshold are considered significant and highlighted in the MD plot. If either BH(1995) or BY(2001) were selected then this value is a false-discovery-rate control. If Holm(1979) was selected then this is an adjusted p-value for family-wise error rate."/>
                    <param name="lfc" type="float" value="0" min="0"
                        label="Minimum log2-fold-change Required"
                        help="Genes above this threshold and below the p-value threshold are considered significant and highlighted in the MD plot."/>
                </when>
                <when value="no"/>
            </conditional>
            <param name="normCounts" type="boolean" truevalue="yes" falsevalue="no" checked="false"
                label="Output normalised counts table?"
                help="Output a file containing the normalised counts, these are in log2 counts per million (logCPM).">
            </param>
            <param name="rdaOption" type="boolean" truevalue="yes" falsevalue="no" checked="false"
                label="Output RData?"
                help="Output all the data used by R to construct the plots and tables, can be loaded into R. A link to the RData file will be provided in the HTML report.">
            </param>
        </section>
    </inputs>

    <outputs>
        <data name="outReport" format="html" label="${tool.name} on ${on_string}: Report" />
        <collection name="outTables" type="list" label="${tool.name} on ${on_string}: Tables">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.tsv$" format="tabular" directory="output_dir" visible="false" />
        </collection>
    </outputs>

    <tests>
        <test> <!-- Ensure report is output -->
            <param name="format" value="matrix" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype" />
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut" />
            <param name="contrast" value="Mut-WT,WT-Mut" />
            <param name="normalisationOption" value="TMM" />
            <output_collection name="outTables" count="2">
                <element name="edgeR_Mut-WT" ftype="tabular" file="edgeR_Mut-WT.tsv" />
                <element name="edgeR_WT-Mut" ftype="tabular" file="edgeR_WT-Mut.tsv" />
            </output_collection>
            <output name="outReport" >
                <assert_contents>
                    <has_text text="edgeR Analysis Output" />
                    <has_text text="quasi-likelihood" />
                    <not_has_text text="likelihood ratio" />
                    <not_has_text text="RData" />
                </assert_contents>
            </output>
        </test>
        <test> <!-- Ensure annotation file input works -->
            <param name="format" value="matrix" />
            <param name="annoOpt" value="yes" />
            <param name="geneanno" value="anno.txt" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype" />
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut" />
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <output_collection name="outTables" >
                <element name="edgeR_Mut-WT" ftype="tabular" file="edgeR_Mut-WTanno.tsv" />
            </output_collection>
        </test>
        <test><!-- Ensure RData file can be output -->
            <param name="format" value="matrix" />
            <param name="rdaOption" value="yes" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype" />
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut" />
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <output name="outReport" >
                <assert_contents>
                    <has_text text="RData" />
                </assert_contents>
            </output>
        </test>       
        <test><!-- Ensure secondary factors work -->
            <param name="format" value="matrix" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype"/>
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut"/>
            <repeat name="sfactors">
                <param name="sfactName" value="Batch"/>
                <param name="sfactLevel" value="b1,b2,b3,b1,b2,b3"/>
            </repeat>
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <output_collection name="outTables" >
                <element name="edgeR_Mut-WT" ftype="tabular" file="edgeR_Mut-WTmultifact.tsv" />
            </output_collection>
        </test>
        <test><!-- Ensure factors file input works -->
            <param name="format" value="matrix" />
            <param name="ffile" value="yes" />
            <param name="finfo" value="factorinfo.txt" />
            <param name="counts" value="matrix.txt" />
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <output_collection name="outTables" >
                <element name="edgeR_Mut-WT" ftype="tabular" file="edgeR_Mut-WTmultifact.tsv" />
            </output_collection>
        </test>
        <test><!-- Ensure normalised counts file output works-->
            <param name="format" value="matrix" />
            <param name="normCounts" value="yes" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype" />
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut" />
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <output_collection name="outTables" count="2">
                <element name="edgeR_Mut-WT" ftype="tabular" file="edgeR_Mut-WT.tsv" />
                <element name="edgeR_normcounts" ftype="tabular" file="edgeR_normcounts.tsv" />             
            </output_collection>
        </test>
        <test><!-- Ensure likelihood ratio option works -->
            <param name="format" value="matrix" />
            <param name="counts" value="matrix.txt" />
            <param name="pfactName" value="Genotype" />
            <param name="pfactLevel" value="WT,WT,WT,Mut,Mut,Mut" />
            <param name="contrast" value="Mut-WT" />
            <param name="normalisationOption" value="TMM" />
            <param name="lrtOption" value="yes" />
            <output name="outReport" >
                <assert_contents>
                    <has_text text="likelihood ratio" />
                    <not_has_text text="quasi-likelihood" />
                </assert_contents>
            </output>
        </test>
        <test><!-- Ensure multiple counts files input works -->
            <param name="format" value="files" />
            <repeat name="rep_factorName">
                <param name="factorName" value="Genotype"/>
                <repeat name="rep_factorLevel">
                    <param name="factorLevel" value="WT"/>
                    <param name="countsFile" value="WT1.counts,WT2.counts,WT3.counts"/>
                </repeat>
                <repeat name="rep_factorLevel">
                    <param name="factorLevel" value="Mut"/>
                    <param name="countsFile" value="Mut1.counts,Mut2.counts,Mut3.counts"/>
                </repeat>
            </repeat>
            <param name="contrast" value="Mut-WT" />
            <param name="normCounts" value="yes" />
            <output_collection name="outTables" >
                <element name="edgeR_Mut-WT" compare="sim_size" ftype="tabular" file="edgeR_Mut-WT_files.tsv" />
                <element name="edgeR_normcounts" ftype="tabular" file="edgeR_normcounts_files.tsv" />  
            </output_collection>
        </test>     
    </tests>

    <help><![CDATA[
.. class:: infomark

**What it does**

Given a matrix of counts (e.g. from featureCounts) and optional information about the genes, this tool
produces plots and tables useful in the analysis of differential gene expression.

This tool uses the `edgeR`_ quasi-likelihood pipeline (edgeR-quasi) for differential expression. This statistical methodology uses negative binomial generalized linear models but with F-tests instead of likelihood ratio tests. This method provides stricter error rate control than other negative binomial based pipelines, including the traditional edgeR pipelines or DESeq2. The RNA-seq pipelines of the limma package also offer excellent error rate control. While the limma pipelines are recommended for large-scale datasets, because of their speed and flexibility, the edgeR-quasi pipeline gives better performance in low-count situations. For the data analyzed in the workflow article `here`_, the edgeR-quasi, limma-voom and limma-trend pipelines are all equally suitable and give similar results.

.. _edgeR: http://www.bioconductor.org/packages/release/bioc/html/edgeR.html
.. _here: https://f1000research.com/articles/5-1438

-----

**Inputs**

**Counts Data:**

The counts data can either be input as one counts file per sample (similar to the DESeq2 tool) or a count matrix can be used. The rows correspond to genes, and columns correspond to the counts for the samples. Values must be tab separated, with the first row containing the sample/column labels and the first column containing the row/gene labels.

Example - one count file for each sample:

    ========== ======= 
    **GeneID** **WT1** 
    ---------- ------- 
    11287      1699    
    11298      1905    
    11302      6       
    11303      2099    
    11304      356     
    11305      2528    
    ========== ======= 

Example - a count matrix:

    ========== ======= ======= ======= ======== ======== ========
    **GeneID** **WT1** **WT2** **WT3** **Mut1** **Mut2** **Mut3**
    ---------- ------- ------- ------- -------- -------- --------
    11287      1699    1528    1601    1463     1441     1495
    11298      1905    1744    1834    1345     1291     1346
    11302      6       8       7       5        6        5
    11303      2099    1974    2100    1574     1519     1654
    11304      356     312     337     361      397      346
    11305      2528    2438    2493    1762     1942     2027
    ========== ======= ======= ======= ======== ======== ========

**Gene Annotations:**
Optional input for gene annotations, this can contain more
information about the genes than just an ID number. The annotations will
be available in the differential expression results table and the optional normalised counts table.

Example:

    ==========  ==========  ===================================================
    **GeneID**  **Symbol**  **GeneName**
    ----------  ----------  ---------------------------------------------------
    1287        Pzp         pregnancy zone protein
    1298        Aanat       arylalkylamine N-acetyltransferase
    1302        Aatk        apoptosis-associated tyrosine kinase
    1303        Abca1       ATP-binding cassette, sub-family A (ABC1), member 1
    1304        Abca4       ATP-binding cassette, sub-family A (ABC1), member 4
    1305        Abca2       ATP-binding cassette, sub-family A (ABC1), member 2
    ==========  ==========  ===================================================

**Factor Information:**
Enter Factor Names and Levels in the tool form, or provide a tab-separated file that has the samples in the same order as listed in the columns of the counts matrix. The second column should contain the Primary Factor levels (e.g. WT, Mut) with optional additional columns for any Secondary Factors.

Example:

    ========== ============ =========
    **Sample** **Genotype** **Batch**
    ---------- ------------ ---------
    WT1        WT           b1
    WT2        WT           b2
    WT3        WT           b3
    Mut1       Mut          b1
    Mut2       Mut          b2
    Mut3       Mut          b3
    ========== ============ =========

**Primary Factor Name:** The name of the primary factor being investigated e.g. Genotype. One primary factor must be entered and spaces must not be used.

**Primary Factor Levels:** The levels of the primary factor of interest, these must be entered in the same order as the samples to which the levels correspond, as listed in the columns of the counts matrix. Spaces must not be used and if entered in the tool form the values should be separated by commas.

**Secondary Factor Name:** Optionally, one or more secondary factors can be included. These are variables that might influence your experiment e.g. Batch, Gender. Spaces must not be used.

**Secondary Factor Levels:** The levels of the secondary factor of interest, these must be entered in the same order as the samples to which the levels correspond, as listed in the columns of the counts matrix. Spaces must not be used and if entered in the tool form the values should be separated by commas.


**Contrasts of Interest:**
The contrasts you wish to make between levels.
A common contrast would be a simple difference between two levels: "Mut-WT"
represents the difference between the mutant and wild type genotypes.
Multiple contrasts should be separated by commas and spaces must not be used.

**Filter Low CPM:**
Option to ignore the genes that do not show significant levels of
expression, this filtering is dependent on two criteria:

    * **Minimum CPM:** This is the counts per million that a gene must have in at
      least some specified number of samples.

    * **Minumum Samples:** This is the number of samples in which the CPM
      requirement must be met in order for that gene to be acknowledged.

Only genes that exhibit a CPM greater than the required amount in at least the
number of samples specified will be used for analysis. Care should be taken to
ensure that the sample requirement is appropriate. In the case of an experiment
with two experimental groups each with two members, if there is a change from
insignificant cpm to significant cpm but the sample requirement is set to 3,
then this will cause that gene to fail the criteria. When in doubt simply do not
filter.

**Normalisation Method:**
Option for using different methods to rescale the raw library
size. For more information, see calcNormFactor section in the edgeR_ user's
manual.

**Use Advanced Testing Options?:**
By default error rate for multiple testing is controlled using Benjamini and
Hochberg's false discovery rate control at a threshold value of 0.05. However
there are options to change this to custom values.

    * **P-Value Adjustment Method:**
      Change the multiple testing control method, the options are BH(1995) and
      BY(2001) which are both false discovery rate controls. There is also
      Holm(1979) which is a method for family-wise error rate control.

    * **Adjusted Threshold:**
      Set the threshold for the resulting value of the multiple testing control
      method. Only observations whose statistic falls below this value is
      considered significant, thus highlighted in the MD plot.

    * **Minimum log2-fold-change Required:**
      In addition to meeting the requirement for the adjusted statistic for
      multiple testing, the observation must have an absolute log2-fold-change
      greater than this threshold to be considered significant, thus highlighted
      in the MD plot.

**Outputs**

This tool outputs a table of differentially expressed genes for each contrast of interest and a HTML report with plots and additional information. Optionally you can choose to output the normalised counts table and the RData file.
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btp616</citation>
    </citations>
</tool>
