<?xml version="1.0"?>
<tool id="nanocompore_sampcomp" name="SampComp" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>...</description>
    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
                                
    <stdio></stdio>
    <version_command></version_command>
    <command detect_errors="exit_code"><![CDATA[
        nanocompore sampcomp
        ## required
        --label1 '$label1'
        --label2 '$label2'
        --fasta $fasta
        --bed $bed
        ## optional
        --max_invalid_kmers_freq $ap.max_invalid_kmers_freq
        --min_coverage $ap.min_coverage
        --min_ref_length $ap.min_ref_length
        --comparison_methods '
        #for $current in $ap.comparison_methods
            $current
        #end for
        ' ## todo
        --sequence_context $ap.sequence_context
        --sequence_context_weights $ap.sequence_context_weights
        --pvalue_thr $ap.pvalue_thr
        $ap.logit
        $ap.allow_warnings 
        --outpath 'results'
        --outprefix 'out'
        --nthreads \${GALAXY_SLOTS:-3}
        --log_level debug |& tee log.txt
        ]]></command>
    <inputs>

        Todo: Reihenfolge relevant?
        --file_list1 /path/to/Condition1_rep1,/path/to/Condition1_rep2
        --file_list2 /path/to/Condition2_rep1,/path/to/Condition2_rep2
        --file_list1 /path/to/Condition1_rep1,/path/to/Condition1_rep2, -1 /path/to/Condition1_rep1,/path/to/Condition1_rep2
                            Comma separated list of NanopolishComp files for label
                            1. (required if --sample_yaml not given)
        --file_list2 /path/to/Condition2_rep1,/path/to/Condition2_rep2, -2 /path/to/Condition2_rep1,/path/to/Condition2_rep2
                            Comma separated list of NanopolishComp files for label
                            2. (required if --sample_yaml not given)

        <param argument="--label1" type="text" value="Condition1" label="Set label of first condition"/>
        <param argument="--label2" type="text" value="Condition2" label="Set label of second condition"/>
        <param argument="--fasta" type="data" format="fasta" label="Select fasta file used for mapping"/>
        <param argument="--bed" type="data" format="bed" label="Select bed file with annotation of transcriptome used for mapping"/>
        <section name="ap" title="Advanced parameters">
            <param argument="--max_invalid_kmers_freq" type="float" value="0.1" min="0.0" max="1.0" label="Set max fequency of invalid kmers"/>
            <param argument="--min_coverage" type="integer" value="30" min="0" label="Set minimum coverage required in each condition to do the comparison"/>
            <param argument="--min_ref_length" type="integer" value="100" min="0" label="Set minimum length of a reference transcript to include it in the analysis"/>
            <param argument="--comparison_methods" type="select" multiple="true" label="Select comparison methods">
                <option value="GMM" selected="true">GMM</option>
                <option value="KS" selected="true">KS</option>
                <option value="TT">TT</option>
                <option value="MW">MW</option>
            </param>
            <param argument="" type="select" multiple="false" label="Select sequence context for combining p-values" help="">
                <option value="0" selected="true">0</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
            </param>
            <param argument="--sequence_context_weights" type="select" multiple="false" label="Select type of weights to use for combining p-values" help="">
                <option value="uniform" selected="true">uniform</option>
                <option value="harmonic">harmonic</option>
            </param>
            <param argument="--pvalue_thr" type="float" value="0.05" min="0.0" max="1.0" label="Set adjusted p-value threshold for reporting significant sites"/>                    
            <param argument="--logit" type="boolean" truevalue="--logit" falsevalue="" label="Use logistic regression testing also when all conditions have replicates?"/> <!-- todo -->
            <param argument="--allow_warnings" type="boolean" truevalue="--allow_warnings" falsevalue="" checked="false" label="Should runtime warnings during the ANOVA tests raise an error?"/>
            <param name="out" type="select" multiple="true" label="Select output file(s)">
                <option value="" selected="true"></option>
                <option value="log">Log</option>
            </param>
        </section>
    </inputs>
    <outputs>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="">
            <param name="" value=""/>           
            <output name="">
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                </assert_contents>
            </output>            
        </test>                                                                                         
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

...

**Input**

...

**Output**

...

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>