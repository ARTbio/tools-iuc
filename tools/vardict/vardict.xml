<tool id="vardict" name="VarDict" version="@WRAPPER_VERSION@">
    <description>calls SNVs and indels for tumor-normal pairs</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="5.0.1">gawk</requirement>
        <requirement type="package" version="1.10">samtools</requirement>
        <requirement type="package" version="@TOOL_VERSION@">vardict-java</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ## LINK BAM INDEX
        #if $select_mode.mode == "paired"
            ln -s '$select_mode.normal' ./normal.bam &&
            ln -s '$select_mode.normal.metadata.bam_index' ./normal.bam.bai &&
        #end if
        ln -s '$select_mode.tumor' ./tumor.bam &&
        ln -s '$select_mode.tumor.metadata.bam_index' ./tumor.bam.bai &&

        ## INDEX REFERENCE FASTA FILE IF FROM HISTORY
        #if $reference_source.reference_source_selector == "history":
            ln -s '$reference_source.ref_file' ./ref.fa &&
            samtools faidx ./ref.fa 2>&1 || echo 'Error running samtools faidx for indexing fasta reference for vardict' >&2 &&
        #else if $reference_source.reference_source_selector == "cached"
            ln -s '$reference_source.ref_file.fields.path' ./ref.fa &&
            ln -s '${reference_source.ref_file.fields.path}.fai' ./ref.fa.fai &&
        #end if

        ## BUILD BED FILE FROM CHROMOSOME LIST
        #if $interval_file:
            grep -w -f '$interval_file' ./ref.fa.fai > ./chromosomes.fa.fai &&
        #else
            ln -s ./ref.fa.fai ./chromosomes.fa.fai &&
        #end if
        awk 'BEGIN {FS=OFS="\t"} {print $1, "1", $2}' ./chromosomes.fa.fai > ./regions.bed &&

        ## BUILD VARDICT COMMAND
        vardict-java
        #if $select_mode.mode == "paired"
            -b "./tumor.bam|./normal.bam"
            -N 'Tumor'
        #else
            -b "./tumor.bam"
            -N 'Sample'
        #end if
        -G ./ref.fa
        -z
        -th \${GALAXY_SLOTS:-1}

        ## ADVANCED OPTIONS
        -f '$advancedsettings.f'
        -k '$advancedsettings.k'
        -r '$advancedsettings.r'
        -B '$advancedsettings.B'
        -Q '$advancedsettings.Q'
        -q '$advancedsettings.q'
        -m '$advancedsettings.m'
        -T '$advancedsettings.T'
        -X '$advancedsettings.X'
        -P '$advancedsettings.P'
        -o '$advancedsettings.o'
        -O '$advancedsettings.O'
        -V '$advancedsettings.V'

        ## CONSTRUCT VCF TABLE
        -c 1 -S 2 -E 3 -g 4

        ## REGION SPECIFICATION (ENTIRE CHROMOSOMES)
        ./regions.bed

        ## POSTPROCESSING
        #if $select_mode.mode == "paired"
            | testsomatic.R
            | var2vcf_paired.pl
            -N 'Tumor|Normal'
        #else
            | teststrandbias.R
            | var2vcf_valid.pl
            -N 'Sample'
            -E
        #end if
         -f '$advancedsettings.f'

        > '$all_variants' &&

        ## Filter for PASS variants
        awk 'BEGIN {FS=OFS="\t"} substr(\$0, 1, 1) == "#" {print \$0; next} \$7 == "PASS" {print \$0}' '$all_variants' > '$passed_variants'
    ]]></command>
    <inputs>
        <conditional name="select_mode">
            <param name="mode" type="select" label="Choose mode">
                <option value="single">Single sample mode</option>
                <option value="paired" selected="True">Paired variant calling</option>
            </param>
            <when value="single">
                <param name="tumor" type="data" format="bam" label="Sample file" />
                <param name="interval_file" type="data" format="txt" label="Chromosomes" help="Restrict SNV calls to the following list of chromosomes (one per line)" />
            </when>
            <when value="paired">
                <param name="normal" type="data" format="bam" label="Normal file" />
                <param name="tumor" type="data" format="bam" label="Tumor file" />
                <param name="interval_file" type="data" format="txt" optional="true" label="Chromosomes" help="Restrict SNV calls to the following list of chromosomes (one per line)" />
            </when>
        </conditional>
        <section name="advancedsettings" title="Advanced Settings" expanded="False">
            <param name="f" type="float" value="0.01" label="Minimum variant allele fraction" />
            <param name="k" type="integer" value="1" label="Set to 0 to disable local realignment" />
            <param name="r" type="integer" value="2" label="Minimum number of reads supporting the variant" />
            <param name="B" type="integer" value="2" label="Minimum number of reads for determining strand bias" />
            <param name="Q" type="integer" value="1" label="Minimum mapping quality for reads to be considered" />
            <param name="m" type="integer" value="8" label="Maximum number of mismatches before a read is no longer considered (gaps are not counted as mismatches)" />
            <param name="T" type="integer" value="0" label="Maximum number of bases considered from 5' end (default: 0, no trimming)" />
            <param name="X" type="integer" value="3" label="Maximum number of extended based after indel to look for mismatches" />
            <param name="P" type="integer" value="5" label="Maximum average read position for a variant to be considered." />
            <param name="q" type="integer" value="25" label="Minimum phred score for a base to be considered a good call" />
            <param name="o" type="float" value="1.5" label="Minimum quality ratio [(good_quality_reads)/(bad_quality_reads+0.5)] (based on definition of a good call; see previous option)" />
            <param name="O" type="float" value="0" label="Minimum average mapping quality" />
            <param name="V" type="float" value="0.05" label="Maximum allowed variant allele fraction in the normal sample" />
        </section>
        <expand macro="ref_select" />
    </inputs>
    <outputs>
        <data name="all_variants" format="vcf" label="VarDict SNVs and Indels (All)" />
        <data name="passed_variants" format="vcf" label="VarDict SNVs and Indels (Passed)" />
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <conditional name="select_mode">
                <param name="mode" value="paired" />
                <param name="normal" ftype="bam" value="normal.bam" />
                <param name="tumor" ftype="bam" value="tumor.bam" />
            </conditional>
            <conditional name="reference_source">
                <param name="reference_source_selector" value="history"/>
                <param name="ref_file" ftype="fasta" value="genome.fasta" />
            </conditional>
            <output name="all_variants" file="all_variants.vcf" />
            <output name="passed_variants" file="passed_variants.vcf" />
        </test>
        <test expect_num_outputs="2">
            <conditional name="select_mode">
                <param name="mode" value="paired" />
                <param name="normal" ftype="bam" value="normal.bam" />
                <param name="tumor" ftype="bam" value="tumor.bam" />
            </conditional>
            <conditional name="reference_source">
                <param name="reference_source_selector" value="cached"/>
                <param name="ref_file" value="test_buildid"/>
            </conditional>
            <output name="all_variants" file="all_variants.vcf" />
            <output name="passed_variants" file="passed_variants.vcf" />
        </test>
    </tests>
    <help>
        <![CDATA[
        https://github.com/AstraZeneca-NGS/VarDictJava
        ]]>
    </help>
    <citations>
        <citation type="doi">10.1093/nar/gkw227</citation>
    </citations>
</tool>
