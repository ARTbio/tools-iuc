<tool id="control_freec" name="Control-FREEC" version="11.6">
    <description>assesses copy number and allelic content using NGS data</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="4.0.2">R</requirement>
        <requirement type="package" version="5.0.1">gawk</requirement>
        <requirement type="package" version="11.6">control-freec</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #set $genome_fasta_fn = 'genome.fa'
        #set $chr_dn = 'chromosomes'
        #set $out_dn = 'output'
        #set $input_control_file_fn = 'control.bam'
        #set $input_sample_file_fn = 'sample.bam'

        ln -s '$reference_source.ref' $genome_fasta_fn &&

        #if str($reference_source.ref_selector) == 'history':
            #set $chrLenFile = $genome_fasta_fn + '.fai'
            samtools faidx $genome_fasta_fn 2>&1 || echo "Error running samtools faidx for indexing fasta reference for control-freec" >&2 &&
        #else
            #set $chrLenFile = str($reference_source.ref.index.fields.path)
        #end if

        mkdir '$chr_dn' &&
        mkdir '$out_dn' &&

        awk -F " " '/^>/ {close(F); F="$chr_dn/chr"substr($1,2)".fa"} {print >> F}' $genome_fasta_fn &&

        ln -s '$input_sample_file' $input_sample_file_fn &&
        ln -s '$input_control_file' $input_control_file_fn &&

        freec
            -conf $script_file
            -sample $input_sample_file_fn
            -control $input_control_file_fn

        #if $advanced_general.advanced_general_button
            #if $advanced_general.makeGraph
                && cat \$CONDA_PREFIX/bin/makeGraph.R | R --slave --args $advanced_general.ploidy output/sample.bam_ratio.txt
            #end if
        #end if
    ]]></command>
    <configfiles>
    	<configfile name="script_file">
#import os
#set galaxy_slots = os.getenv("GALAXY_SLOTS", 4)
[general]
chrFiles = chromosomes
outputDir = output
chrLenFile = genome.fa.fai
maxThreads = $galaxy_slots

#if $advanced_general.advanced_general_button == True
    BedGraphOutput = $advanced_general.BedGraphOutput
    breakPointThreshold = $advanced_general.breakPointThreshold
    breakPointType = $advanced_general.breakPointType
    #if $advanced_general.contaminationAdjustment_selector.contaminationAdjustment == "TRUE"
        contaminationAdjustment = $advanced_general.contaminationAdjustment_selector.contaminationAdjustment
        contamination = $advanced_general.contaminationAdjustment_selector.contamination
    #end if
    #if $advanced_general.degree == "34"
        #set $degree_val = "3&amp;4"
        degree = $degree_val
    #else
        degree = $advanced_general.degree
    #end if
    forceGCcontentNormalization = $advanced_general.forceGCcontentNormalization
    intercept = $advanced_general.intercept
    minCNAlength = $advanced_general.minCNAlength
    minMappabilityPerWindow = $advanced_general.minMappabilityPerWindow
    minExpectedGC = $advanced_general.minExpectedGC
    maxExpectedGC = $advanced_general.maxExpectedGC
    minimalSubclonePresence = $advanced_general.minimalSubclonePresence
    noisyData = $advanced_general.noisyData
    ploidy = $advanced_general.ploidy
    printNA = $advanced_general.printNA
    readCountThreshold = $advanced_general.readCountThreshold
    sex = $advanced_general.sex
    #if $advanced_general.window_selector.window_bool == "50000"
        window = $advanced_general.window_selector.window
        step = $advanced_general.window_selector.step
    #else
        coefficientOfVariation = $advanced_general.coefficientOfVariation
    #end if
    telocentromeric = $advanced_general.telocentromeric
#end if

[sample]
mateFile = sample.bam
inputFormat = BAM
mateOrientation = $mateOrientation_selector

[control]
mateFile = control.bam
inputFormat = BAM
mateOrientation = $mateOrientation_selector
    	</configfile>
    </configfiles>
    <inputs>
		<param name="input_sample_file" type="data" format="bam" multiple="false" label="Sample file" help="Sample file in .BAM format." />
		<conditional name="input_control">
            <param name="input_control_bool" type="boolean" checked="true" label="Use a control file (mandatory for WES, optional for WGS)" />
            <when value="false" />
            <when value="true">
                <param name="input_control_file" type="data" format="bam" multiple="false" label="Control file" help="Control file in .BAM format." />
            </when>
        </conditional>
        <param name="mateOrientation_selector" type="select" display="radio" label="Format of reads" help="If you specify orientation of your reads then only reads mapping in the corresponding orientation will be used for calculation of copy number profiles.">
            <option value="0" selected="True">(0) single-end</option>
            <option value="RF">(RF) Illumina mate-pair</option>
            <option value="FR">(FR) Illumina paired-end</option>
            <option value="FF">(FF) SOLiD mate-pair</option>
        </param>
        <expand macro="reference_interface" />
        <conditional name="WGS_WES">
            <param name="WGS_WES_selector" type="select" label="Select the kind of data you want to analyze" help="">
                <option value="WGS" selected="True">whole-genome sequencing (WGS)</option>
                <option value="WES">whole-exome sequencing (WES)</option>
                <option value="other">other</option>
            </param>
            <when value="WGS">
                <conditional name="advanced">
                    <param name="advanced_bool" type="boolean" checked="false" label="Advanced WGS settings" />
                    <when value="false" />
                    <when value="true">
                        <expand macro="WGS" />
                        <expand macro="shared" />
                    </when>
                </conditional>
            </when>
            <when value="WES">
                <conditional name="advanced">
                    <param name="advanced_bool" type="boolean" checked="false" label="Advanced WES settings" />
                    <when value="false" />
                    <when value="true">
                        <expand macro="WES" />
                        <expand macro="shared" />
                    </when>
                </conditional>
            </when>
            <when value="other">
                <expand macro="other" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="sample.bam_sample" format="tabular" label="Raw copy number profiles (sample) on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_sample.cpn" />
        <data name="control.bam_control" format="tabular" label="Raw copy number profiles (control) on ${tool.name} on ${on_string}" from_work_dir="output/control.bam_control.cpn" />
        <data name="sample" format="tabular" label="Coordinates of predicted CN alterations on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_CNVs" />
        <data name="sample.bam_info" format="txt" label="Information about FREEC run on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_info.txt" />
        <data name="sample.bam_ratio" format="tabular" label="Ratios and predicted CN alterations for each window on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_ratio.txt" />
        <data name="sample.bam_ratio.BedGraph" format="bed" label="Ratios in BedGraph format on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_ratio.BedGraph">
            <filter>advanced_general['advanced_general_button'] and advanced_general['BedGraphOutput']</filter>
        </data>
        <data name="sample.bam_ratio.txt.png" format="png" label="Normalized CN profile on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_ratio.txt.png">
            <filter>advanced_general['advanced_general_button'] and advanced_general['makeGraph']</filter>
        </data>
        <data name="sample.bam_ratio.txt.log2.png" format="png" label="Normalized CN profile (log2) on ${tool.name} on ${on_string}" from_work_dir="output/sample.bam_ratio.txt.log2.png">
            <filter>advanced_general['advanced_general_button'] and advanced_general['makeGraph']</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input_sample_file" ftype="bam" value="P0667T_GATKrealigned_duplicates_marked.bam" />
		    <param name="input_control_file" ftype="bam" value="P0667N_GATKrealigned_duplicates_marked.bam" />
            <param name="mateOrientation_selector" value="0" />
            <param name="ref_selector" value="history" />
            <param name="ref" ftype="fasta" value="human_g1k_v37.fasta" />
            <output name="sample.bam_sample" file="output/sample.bam_sample.cpn" />
            <output name="control.bam_control" file="output/control.bam_control.cpn" />
            <output name="sample" file="output/sample.bam_CNVs" />
            <output name="sample.bam_info" file="output/sample.bam_info.txt" />
            <output name="sample.bam_ratio" file="output/sample.bam_ratio.txt" />
        </test>
    </tests>
    <help><![CDATA[
        **What it does**
    ]]></help>
     <citations>
         <citation type="doi">10.1093/bioinformatics/btr670</citation>
         <citation type="doi">10.1093/bioinformatics/btq635</citation>
    </citations>
</tool>
