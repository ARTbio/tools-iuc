<?xml version="1.0"?>

<tool name="codeML" id="codeml" version="1.0">

    <description>
        Detects positive selection.
    </description>   

    <requirements>
        <requirement type="package" version="4.9">paml</requirement>
    </requirements>
    
    <command>
    <![CDATA[

        codeml '$codeml.ctl';
        
    ]]>
    </command>

    <configfiles>
        <configfile name="codeml.ctl">
      seqfile = $concat_nuc * sequence data file name 
      outfile = run_codeml * main result file name 
     treefile = $best_tree * tree structure file name
        noisy = 9  * 0,1,2,3,9: how much rubbish on the screen 
      verbose = $adv.verbose  * 1: detailed output, 0: concise output 
      runmode = 0  * 0: user tree;  1: semi-automatic;  2: automatic 
                   * 3: StepwiseAddition; (4,5):PerturbationNNI; -2: pairwise 
      seqtype = $adv.seqtype  * 1:codons; 2:AAs; 3:codons--&gt;AAs 
    CodonFreq = $adv.CodonFreq  * 0:1/61 each, 1:F1X4, 2:F3X4, 3:codon table 
*       ndata = 10 
        clock = $adv.clock   * 0:no clock, 1:clock; 2:local clock 
       aaDist = $adv.aaDist  * 0:equal, +:geometric; -:linear, 1-6:G1974,Miyata,c,p,v,a 
                   * 7:AAClasses 
   aaRatefile = wag.dat * only used for aa seqs with model=empirical(_F) 
                  * dayhoff.dat, jones.dat, wag.dat, mtmam.dat, or your own 
        model = $compat_model.brmodel
                   * models for codons: 
                       * 0:one, 1:b, 2:2 or more dN/dS ratios for branches 
                   * models for AAs or codon-translated AAs: 
                       * 0:poisson, 1:proportional,2:Empirical,3:Empirical+F 
                       * 6:FromCodon, 8:REVaa_0, 9:REVaa(nr=189) 
      NSsites = $compat_model.FSsites  * 0:one w;1:neutral;2:selection; 3:discrete;4:freqs; 
                   * 5:gamma;6:2gamma;7:beta;8:beta&amp;w;9:beta&amp;gamma; 
                   * 10:beta&amp;gamma+1; 11:beta&amp;normal&gt;1; 12:0&amp;2normal&gt;1; 
                   * 13:3normal&gt;0 
        icode = $adv.icode  * 0:universal code; 1:mammalian mt; 2-11:see below 
        Mgene = $adv.Mgene  * 0:rates, 1:separate;  
    fix_kappa = $adv.fix_kappa  * 1: kappa fixed, 0: kappa to be estimated 
        kappa = $adv.kappa  * initial or fixed kappa
    fix_omega = $fix_omega  * 1: omega or omega_1 fixed, 0: estimate  
        omega = $omega * initial or fixed omega, for codons or codon-based AAs 
    fix_alpha = $adv.fix_alpha  * 0: estimate gamma shape parameter; 1: fix it at alpha 
        alpha = $adv.alpha * initial or fixed alpha, 0:infinity (constant rate) 
       Malpha = $adv.Malpha  * different alphas for genes 
        ncatG = $adv.ncatG  * # of categories in dG of NSsites models 
      fix_rho = $adv.fix_rho  * 0: estimate rho; 1: fix it at rho 
          rho = $adv.rho * initial or fixed rho,   0:no correlation 
        getSE = $adv.getSE  * 0: don't want them, 1: want S.E.s of estimates 
 RateAncestor = 1  * (0,1,2): rates (alpha&gt;0) or ancestral states (1 or 2) 
   Small_Diff = $adv.Small_Diff
*   cleandata = $adv.cleandata  * remove sites with ambiguity data (1:yes, 0:no)? 
* fix_blength = $adv.fix_blength   * 0: ignore, -1: random, 1: initial, 2: fixed 
       method = $adv.method   * 0: simultaneous; 1: one branch at a time 
        </configfile>
    </configfiles>
    
    <inputs>

        <param name="concat_nuc" type="data" format="fasta" label="Nucleic Fasta concatenation file" help="Your Fasta codon (nucleic) concatenation file from the ConcatPhyl tool" />
        <param name="best_tree" type="data" format="txt" label="BestTree file" help="Your BestTree file from the ConcatPhyl tool (Nucleic or proteic)" />

        <conditional name="compat_model" >
            <param name="brmodel" type="select" label="CodeML branch model" help="for tree file editing in model 2 and 3, see paml manual (chap.3)" >
                <option value="0" selected="true">'0' : one dN/dS ratio for all branches</option>
                <option value="1">'1' : one dN/dS ratio for each branch ("free-ratio model") ; its use is discouraged</option>
                <option value="2">'2' : arbitrary number of ratios ; implies to manually edit your tree file</option>
                <option value="3">'3' : clade-model ; implies to manually edit your tree file</option>
            </param>
            <!-- Is there a way to do some code factoring with all the lines below ?? -->
            <when value="0" >
                <param name="FSsites" type="select" label="CodeML site model" >
                    <option value="0" selected="true">0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                </param>
            </when>

            <when value="1">
                <param name="FSsites" type="select" label="CodeML site model" >
                    <option value="0" selected="true">0</option>
                </param>
            </when>

            <when value="2" >
                <param name="FSsites" type="select" label="CodeML site model" >
                    <option value="0" selected="true">0</option>
                    <option value="2">2 (Warning : only two branch type allowed for branch models)</option>
                    <option value="3">3 (Warning : only two branch type allowed for branch models)</option>
                </param>
            </when>

            <when value="3" >
                <param name="FSsites" type="select" label="CodeML site model" >
                    <option value="0" selected="true">0</option>
                    <option value="2">2 (Warning : only two branch type allowed for branch models)</option>
                    <option value="3">3 (Warning : only two branch type allowed for branch models)</option>
                </param>
            </when>
        </conditional>

        <param name="fix_omega" type="select" label="fix_omega" >
            <option value="0" selected="true">0 : estimated</option>
            <option value="1">1 : fixed</option>
        </param>
        <param name="omega" type="float" label="omega" value="0.2" help="initial or fixed omega (according to your choice for fix_omega), for codons or codon-based AAs" />
       
        <!-- ajouter parametres pour nom fichier resu principal -->
        <section name="adv" title="Advanced Options" expanded="False" >
            <param name="verbose" type="select" label="verbose" >
                <option value="0" selected="true">0 : concise output</option>
                <option value="1">1 : detailed output</option>
            </param>
            <param name="runmode" type="select" label="runmode" >
                <option value="0" selected="true">0 : user tree</option>
                <option value="1">1 : semi-automatic</option>
                <option value="2">2 : automatic</option>
                <option value="3">3 : StepwiseAddition</option>
                <option value="4">4 : PerturbationNNI</option>
                <option value="5">5 : PerturbationNNI</option>
                <option value="-2">-2 : pairwise--&gt;AAs</option>
            </param>
            <param name="seqtype" type="select" label="seqtype" >
                <option value="0" selected="true">1 : codons</option>
                <option value="1">2 : AAs (only compatible with FSsites=0) </option>
                <option value="2">3 : codons--&gt;AAs AAs (only compatible with FSsites=0)</option>
            </param>
            <param name="CodonFreq" type="select" label="CodonFreq" >
                <option value="0">0 : 1/61 each:</option>
                <option value="1" selected="true">1 : FIX4</option>
                <option value="2">2 : codon table</option>
            </param>
            <param name="clock" type="select" label="clock" >
                <option value="0" selected="true">0 : no clock</option>
                <option value="1">1 : clock</option>
                <option value="2">0 : local clock (needed : branch labels in the tree)</option>
            </param>
            <param name="aaDist" type="select" label="aaDist" >
                <option value="0" selected="true">0 : equal</option>
                <option value="+">+ : geometric</option>
                <option value="-">- : linear</option>
                <option value="1">1 : G1974</option>
                <option value="2">2 : Miyata</option>
                <option value="3">3 : c</option>
                <option value="4">4 : p</option>
                <option value="5">5 : v</option>
                <option value="6">6 : a</option>
                <option value="7">7 : AAClasses</option>
            </param>

            <!--aaRatefile -->

            <param name="icode" type="select" label="icode" >
                <option value="0" selected="true">0 : universal code</option>
                <option value="1">1 : mammalian mt</option>
            </param>
            <param name="Mgene" type="select" label="Mgene" >
                <option value="0" selected="true">0 : rates</option>
                <option value="1">1 : separate</option>
            </param>
            <param name="fix_kappa" type="select" label="fix_kappa" >
                <option value="0" selected="true">0 : estimated</option>
                <option value="1">1 : fixed</option>
            </param>
            <param name="kappa" type="float" label="kappa" value="2" help="Initial or fixed kappa (according to your choice for fix_omega)" />

            <param name="fix_alpha" type="select" label="fix_alpha" help="0: estimate gamma shape parameter; 1: fix it at alpha" >
                <option value="0">0 : estimate gamma shape parameter</option>
                <option value="1" selected="true">1 : fix it at alpha</option>
            </param>
            <param name="alpha" type="float" label="alpha" value="0" help="initial or fixed alpha, 0:infinity (constant rate)" />
            <param name="Malpha" type="integer" label="Malpha" value="0" help="different alphas for genes" />
            <param name="ncatG" type="integer" label="ncatG" value="3" help="# of categories in dG of NSsites models" />
            <param name="fix_rho" type="select" label="fix_rho" >
                <option value="0">0 : estimate rho</option>
                <option value="1" selected="true">1 : fix it at rho</option>
            </param>
            <param name="rho" type="float" label="rho" value="0" help="initial or fixed alpha, 0:no correlation" />
            <param name="getSE" type="select" label="getSE" >
                <option value="0" selected="true">0 : don't want them</option>
                <option value="1">1 : want S.E.s of estimates</option>
            </param>
            <!--RateAncestor-->
            
            <param name="Small_Diff" type="float" label="Small_Diff" value=".5e-6" />

            <param name="cleandata" type="select" label="cleandata" help="remove sites with ambiguity data" >
                <option value="0" selected="true">0 : no</option>
                <option value="1">1 : yes</option>
            </param>
            <param name="fix_blength" type="select" label="fix_blength" >
                <option value="0" selected="true">0 : ignore</option>
                <option value="-1">-1 : random</option>
                <option value="1">1 : initial</option>
                <option value="2">2 : fixed</option>
            </param>
            <param name="method" type="select" label="method">
                <option value="0" selected="true">0 : simultaneous</option>
                <option value="1">1 : one branch at a time</option>
            </param>

        </section>
    </inputs>
    
    <outputs>       
        <data format="txt" name="log" label="CompCodeML_output_log"/>
        <data format="txt" name="2ngdn" label="2NG.dN" from_work_dir="2NG.dN" />
        <data format="txt" name="2ngds" label="2NG.dS" from_work_dir="2NG.dS" />
        <data format="txt" name="2ngt" label="2NG.t" from_work_dir="2NG.t" />
        <data format="txt" name="ctl" label="codeml.ctl" from_work_dir="codeml.ctl" />
        <data format="txt" name="lnf" label="lnf" from_work_dir="lnf" />
        <data format="txt" name="rst" label="rst" from_work_dir="rst" />
        <data format="txt" name="rst1" label="rst1" from_work_dir="rst1" />
        <data format="txt" name="rub" label="rub" from_work_dir="rub" />
        <data format="txt" name="run" label="run_codeml" from_work_dir="run_codeml" />
        <data format="txt" name="4fold" label="4fold.nuc" from_work_dir="4fold.nuc" >
            <filter>adv['verbose']=="1"</filter>
        </data>
    </outputs>
    
    <tests>
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="0" />
                <param name="FSsites" value="0" />
            </conditional>
            <param name="fix_omega" value="0" />
            <param name="omega" value="0.2" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="best_tree" ftype="txt" value="RAxML_bestTree" />
            <output name="ctl" value="1_codeml.ctl" lines_diff="4"/>
            <output name="2ngdn" value="1_2ngdn" />
            <output name="2ngds" value="1_2ngds" />
            <output name="2ngt" value="1_2ngt" />           
        </test>
        <!--
        <test>      
            <conditional name="compat_model" >
                <param name="brmodel" value="1" />              
            </conditional>
            <param name="fix_omega" value="0" />
            <param name="omega" value="0.2" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="best_tree" ftype="txt" value="RAxML_bestTree" />
            <output name="ctl" value="2_codeml.ctl" lines_diff="4"/>
            <output name="2ngdn" value="2_2ngdn" />
            <output name="2ngds" value="2_2ngds" />
            <output name="2ngt" value="2_2ngt" />           
        </test>        
        <test>      
            <conditional name="compat_model" >
                <param name="brmodel" value="2" />
                <param name="FSsites" value="0" />            
            </conditional>
            <param name="fix_omega" value="0" />
            <param name="omega" value="0.2" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="best_tree" ftype="txt" value="tree_model2" />
            <output name="ctl" value="3_codeml.ctl" lines_diff="4"/>
            <output name="2ngdn" value="3_2ngdn" />
            <output name="2ngds" value="3_2ngds" />
            <output name="2ngt" value="3_2ngt" />           
        </test>
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="0" />
                <param name="FSsites" value="2" />
            </conditional>
            <param name="fix_omega" value="1" />
            <param name="omega" value="1" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="best_tree" ftype="txt" value="RAxML_bestTree" />
            <output name="ctl" value="4_codeml.ctl" lines_diff="4"/>
            <output name="2ngdn" value="4_2ngdn" />
            <output name="2ngds" value="4_2ngds" />
            <output name="2ngt" value="4_2ngt" />           
        </test>
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="3" />
                <param name="FSsites" value="2" />
            </conditional>
            <param name="fix_omega" value="0" />
            <param name="omega" value="0.2" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="best_tree" ftype="txt" value="tree_model3" />
            <output name="ctl" value="5_codeml.ctl" lines_diff="4"/>
            <output name="2ngdn" value="5_2ngdn" />
            <output name="2ngds" value="5_2ngds" />
            <output name="2ngt" value="5_2ngt" />           
        </test>
    -->
    </tests>
    
    <help>

.. class:: infomark

**Galaxy integration** Victor Mataigne and ABIMS TEAM

 | Contact support.abims@sb-roscoff.fr for any questions or concerns about the Galaxy implementation of this tool.

---------------------------------------------------

==========
CompCodeML
==========

| Full and detailed codeml readme in the paml manual (see citation).

.. class:: warningmark

| Due to their high number, we may have forgot to test some parameters compatibility. Basically, this implementation handles incompatibilities between branches models and sites models., but you should have a look at the full readme before looking at the advanced parameters. The incompatibilities are mentionned when we found it while testing the tool; if you choose by mistake incompatible parameters, the output files will be empty, except the log file which will normally explicit the error.

-----------
Description
-----------

| codeML finds positive selection within branches or codons within a tree and a set of sequences.
| It takes as inputs a treefile in Newick format and a fasta file with sequences from the species of the tree file (one header/sequence per species) and run codeml (from the paml suite).
|
| Several models are available (not all are compatible).
|
| Basically, this tool write a configfile called codeml.ctl with the specified parameters and then launches codeml.

----------
Parameters
----------

| Branch model :
| Site model :
| fix_omega : choose "0" to have omega estimated along the run ; choose "1" to set a fixed omega value for the whole run.
| omega : if fix_omega = 0, this parameter is the initial value of omega; if fix_omega = 1, it is the omega value for the whole run.
| More parameters coming soon.

    </help>

    <citations>
        <citation type="bibtex">http://abacus.gene.ucl.ac.uk/software/paml.html</citation>
    </citations>
</tool>
