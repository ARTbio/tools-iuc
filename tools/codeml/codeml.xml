<tool name="codeML" id="codeml" version="1.0">

    <description>
        Detects positive selection.
    </description>   

    <requirements>
        <requirement type="package" version="4.9">paml</requirement>
    </requirements>
    
    <command>
    <![CDATA[

        codeml '$codeml_ctl';
        cp '$codeml_ctl' .;
        mv '$codeml_ctl' codeml_config
        
    ]]>
    </command>

    <configfiles>
        <configfile name="codeml_ctl">
            <![CDATA[
      seqfile = $concat_nuc * sequence data file name 
      outfile = run_codeml * main result file name 
     treefile = $tree * tree structure file name
        noisy = 9  * 0,1,2,3,9: how much rubbish on the screen 
      verbose = $adv.verbose  * 1: detailed output, 0: concise output 
      runmode = $adv.runmode  * 0: user tree;  1: semi-automatic;  2: automatic 
                   * 3: StepwiseAddition; (4,5):PerturbationNNI; -2: pairwise 
      seqtype = $adv.seqtype  * 1:codons; 2:AAs; 3:codons-->AAs 
    CodonFreq = $adv.CodonFreq  * 0:1/61 each, 1:F1X4, 2:F3X4, 3:codon table 
*       ndata = $adv.ndata 
        clock = $adv.clock   * 0:no clock, 1:clock; 2:local clock 
       aaDist = $adv.aaDist  * 0:equal, +:geometric; -:linear, 1-6:G1974,Miyata,c,p,v,a 
                   * 7:AAClasses 
   aaRatefile = $adv.aaRateFile * only used for aa seqs with model=empirical(_F) 
                  * dayhoff.dat, jones.dat, wag.dat, mtmam.dat, or your own 
        model = $compat_model.brmodel
                   * models for codons: 
                       * 0:one, 1:b, 2:2 or more dN/dS ratios for branches 
                   * models for AAs or codon-translated AAs: 
                       * 0:poisson, 1:proportional,2:Empirical,3:Empirical+F 
                       * 6:FromCodon, 8:REVaa_0, 9:REVaa(nr=189) 
      NSsites = $compat_model.NSsites  * 0:one w;1:neutral;2:selection; 3:discrete;4:freqs; 
                   * 5:gamma;6:2gamma;7:beta;8:beta&w;9:beta&gamma; 
                   * 10:beta&gamma+1; 11:beta&normal>1; 12:0&2normal>1; 
                   * 13:3normal>0 
        icode = $adv.icode  * 0:universal code; 1:mammalian mt; 2-11:see below 
        Mgene = $adv.Mgene  * 0:rates, 1:separate;  
    fix_kappa = $adv.fix_kappa  * 1: kappa fixed, 0: kappa to be estimated 
        kappa = $adv.kappa  * initial or fixed kappa
    fix_omega = $adv.fix_omega  * 1: omega or omega_1 fixed, 0: estimate  
        omega = $adv.omega * initial or fixed omega, for codons or codon-based AAs 
    fix_alpha = $adv.fix_alpha  * 0: estimate gamma shape parameter; 1: fix it at alpha 
        alpha = $adv.alpha * initial or fixed alpha, 0:infinity (constant rate) 
       Malpha = $adv.Malpha  * 1: different alphas for genes, 0 : one alpha
        ncatG = $adv.ncatG  * # of categories in dG of NSsites models 
      fix_rho = $adv.fix_rho  * 0: estimate rho; 1: fix it at rho 
          rho = $adv.rho * initial or fixed rho,   0:no correlation 
        getSE = $adv.getSE  * 0: don't want them, 1: want S.E.s of estimates 
 RateAncestor = $adv.RateAncestor  * (0,1,2): rates (alpha>0) or ancestral states (1 or 2) 
   Small_Diff = $adv.Small_Diff
*   cleandata = $adv.cleandata  * remove sites with ambiguity data (1:yes, 0:no)? 
* fix_blength = $adv.fix_blength   * 0: ignore, -1: random, 1: initial, 2: fixed 
       method = $adv.method   * 0: simultaneous; 1: one branch at a time 
             ]]>
        </configfile>
    </configfiles>
    
    <inputs>

        <param name="concat_nuc" type="data" format="fasta" label="Sequences file" help="The fasta file with the sequences to be analyzed" />
        <param name="tree" type="data" format="txt" label="tree file" help="Tree file in Newick format" />

        <conditional name="compat_model" >
            <param name="brmodel" type="select" label="model : CodeML branch model" help="for tree file editing in model 2 and 3, see paml manual (chap.3)" >
                <option value="0" selected="true">'0' : one dN/dS ratio for all branches (e.g. basic model if NSsites=0)</option>
                <option value="1">'1' : one dN/dS ratio for each branch ("free-ratio model") ; its use is discouraged</option>
                <option value="2">'2' : arbitrary number of ratios ; implies to manually edit your tree file</option>
                <option value="3">'3' : clade-model ; implies to manually edit your tree file</option>
            </param>            

            <when value="0" >
                <param name="NSsites" type="select" label="NSsites : CodeML site model ; fix_alpha !=1 and alpha !=0 are not compatible with NSsites !=0" >
                    <option value="0" selected="true">0 : e.g. basic model if model=0</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                </param>
            </when>
            <when value="1">
                <param name="NSsites" type="select" label="NSsites : CodeML site model ; fix_alpha !=1 and alpha !=0 are not compatible with NSsites !=0" >
                    <option value="0" selected="true">0</option>
                </param>
            </when>
            <when value="2" >
                <param name="NSsites" type="select" label="NSsites : CodeML site model ; fix_alpha !=1 and alpha !=0 are not compatible with NSsites !=0" >
                    <option value="0" selected="true">0</option>
                    <option value="2">2 (Warning : only two branch type allowed for branch models)</option>
                    <option value="3">3 (Warning : only two branch type allowed for branch models)</option>
                </param>
            </when>
            <when value="3" >
                <param name="NSsites" type="select" label="NSsites : CodeML site model ; fix_alpha !=1 and alpha !=0 are not compatible with NSsites !=0" >
                    <option value="0" selected="true">0</option>
                    <option value="2">2 (Warning : only two branch type allowed for branch models)</option>
                    <option value="3">3 (Warning : only two branch type allowed for branch models)</option>
                </param>
            </when>
        </conditional>        
       
        <!-- advanced parameters -->
        <section name="adv" title="Advanced Options" expanded="False" >
            <param name="verbose" type="select" label="verbose" help="Set the level of details in the log file">
                <option value="0" selected="true">0 : concise output</option>
                <option value="1">1 : detailed output</option>
            </param>

            <param name="runmode" type="select" label="runmode" help="Tree analysis mode">
                <option value="0" selected="true">0 : user tree</option>
                <option value="1">1 : heuristic tree search  starting from a multifurcating tree from the tree structure file</option>
                <option value="2">2 : heuristic tree search starting from the tree file</option>
                <option value="3">3 : StepwiseAddition</option>
                <option value="4">4 : PerturbationNNI with the starting tree obtained by a parsimony algorithm</option>
                <option value="5">5 : PerturbationNNI with the starting tree read from the tree structure file</option>
                <option value="-2">-2 : ML estimation of dS and dN in pairwise comparisons of protein-coding sequences</option>
            </param>

            <param name="seqtype" type="select" label="seqtype" help="Sequences format in the fasta file">
                <option value="1" selected="true">1 : codons</option>
                <option value="2">2 : AAs (only compatible with FSsites=0) </option>
                <option value="3">3 : codons--&gt;AAs AAs (only compatible with FSsites=0)</option>
            </param>

            <param name="CodonFreq" type="select" label="CodonFreq" help="Equilibrium codon frequencies in codon substitution model">
                <option value="0">0 : 1/61 each:</option>
                <option value="1" selected="true">1 : FIX4</option>
                <option value="2">2 : codon table</option>
            </param>

            <param name="ndata" type="integer" label="ndata" value="10" help="Number of separate data sets in the file. Useful for simulation."/>

            <param name="clock" type="select" label="clock" help="Specifies models concerning rate constancy or variation among lineages">
                <option value="0" selected="true">0 : no clock ; An unrooted tree should be used under this model</option>
                <option value="1">1 : clock</option>
                <option value="2">2 : local clock (needed : branch labels in the tree)</option>
            </param>            
            
            <param name="aaDist" type="select" label="aaDist : amino acid distances" help="(values other than '0 : equal' don't work with NSsites and seqtype=codons">
                <option value="0" selected="true">0 : equal</option>
                <option value="+">+ : geometric</option>
                <option value="-">- : linear</option>
                <option value="1">1 : G1974</option>
                <option value="2">2 : Miyata</option>
                <option value="3">3 : c</option>
                <option value="4">4 : p</option>
                <option value="5">5 : v</option>
                <option value="6">6 : a</option>
                <option value="7">7 : AAClasses</option>
            </param>
            
            <param name="aaRateFile" type="select" label="aaRateFile" help="" >
                <option value="wag.dat" selected="true">wag.dat</option>
                <option value="dayhoff.dat" >dayhoff.dat</option>
                <option value="jones.dat">jones.dat</option>
                <option value="mtmam.dat">mtmam.dat</option>
            </param>

            <param name="icode" type="select" label="icode : specifies the genetic code" >
                <option value="0" selected="true">0 : universal code</option>
                <option value="1">1 : mammalian mt</option>
                <option value="3">3 : mold mt</option>
                <option value="4">4 : invertebrate mt</option>
                <option value="5">5 : ciliate nuclear code mt</option>
                <option value="6">6 : echinoderm mt</option>
                <option value="7">7 : euplotid mt</option>
                <option value="8">8 : alternative yeast nuclear</option>
                <option value="9">9 : scidian mt</option>
                <option value="10">10 : blepharisma nuclear</option>
                <option value="11">11 : Yang's regularized code</option>
            </param>

            <param name="Mgene" type="select" value="0" label="Mgene" help="Used in combination with option G in the sequence data file, for combined analysis of data from multiple genes or multiple site partitions" >
                <option value="0">0 : complete homogeneity among genes </option>
                <option value="1">1 : equavilent to a separate analysis</option>
                <option value="2">2 : different frequency parameters for different genes but the same rate ratio parameters</option>
                <option value="3">3 : different rate ratio parameters and the same frequency parameters</option>
                <option value="4">4 : both different rate ratio parameters and different frequency parameters for different genes </option>
            </param>

            <param name="fix_kappa" type="select" label="fix_kappa" help="Specifies wether kappa in  K80, F84, or HKY85 is fixed or estimated">
                <option value="0" selected="true">0 : estimated</option>
                <option value="1">1 : fixed (the next parameter below)</option>
            </param>

            <param name="kappa" type="float" label="kappa" value="2" help="Initial or fixed value of kappa" />

            <param name="fix_omega" type="select" label="fix_omega" >
                <option value="0" selected="true">0 : estimated</option>
                <option value="1">1 : fixed</option>
            </param>

            <param name="omega" type="float" label="omega" value="0.2" help="initial or fixed omega (according to your choice for fix_omega), for codons or codon-based AAs" />
            <param name="fix_alpha" type="select" label="fix_alpha" help="0: estimate gamma shape parameter; 1: fix it at alpha" >
                <option value="0">0 : estimate gamma shape parameter. Not recommended</option>
                <option value="1" selected="true">1 : fix it at alpha (the next parameter below)</option>
            </param>

            <param name="alpha" type="float" label="alpha" value="0" help="initial or fixed value of alpha, 0: constant rate. fix_alpha !=1 and alpha !=0 are not compatible with NSsites !=0"/>

            <param name="Malpha" type="select" label="Malpha" help="different alphas for genes" >
                <option value="0">0 : one gamma distribution will be applied across all sites (one alpha)</option>
                <option value="1">1 : different gamma distribution is used for each gene or codon position (different alphas for genes)</option>
            </param>

            <param name="ncatG" type="integer" label="ncatG" value="3" help="# of categories in dG of NSsites models" />

            <param name="fix_rho" type="select" label="fix_rho" help="Independence or correlation of rates at adjacent sites">
                <option value="0">0 : estimate rho</option>
                <option value="1" selected="true">1 : fix it at rho (the next parameter below)</option>
            </param>

            <param name="rho" type="float" label="rho" value="0" help="initial or fixed rho; fix_rho=1 and rho=0 : independant rates" />

            <param name="getSE" type="select" label="getSE" help="estimates of the standard errors of estimated parameters. ">
                <option value="0" selected="true">0 : don't want them</option>
                <option value="1">1 : want S.E.s of estimates</option>
            </param>

            <param name="RateAncestor" type="select" label="RateAncestor" help="1 forces the program to do two additional analyses" >
                <option value="0" selected="true">0 : usually use 0</option>
                <option value="1">1 :  model of variable rates across site + empirical Bayesian reconstruction of ancestral sequences</option>
            </param>        
            
            <param name="Small_Diff" type="float" label="Small_Diff" value=".5e-6" help="small value used in the difference approximation of derivatives" />

            <param name="cleandata" type="select" label="cleandata" help="remove sites with ambiguity data" >
                <option value="0" selected="true">0 : no (don't remove ambiguous data)</option>
                <option value="1">1 : yes (remove ambiguous data)</option>
            </param>

            <param name="fix_blength" type="select" label="fix_blength" help="branch lenght dealing">
                <option value="0" selected="true">0 : ignore branch lengths</option>
                <option value="-1">-1 : start from random starting points</option>
                <option value="1">1 : initial values as written in the tree file</option>
                <option value="2">2 : fixed at values in the tree file</option>
            </param>

            <param name="method" type="select" label="method" help="controls the iteration algorithm for estimating branch lengths">
                <option value="0" selected="true">0 : simultaneous (old paml algorithm)</option>
                <option value="1">1 : one branch at a time (newly implemented in paml ; does not work with clock=1,2,3)</option>
            </param>
        </section>
    </inputs>
    
    <outputs>
        <data format="txt" name="ctl" label="codeml.ctl" from_work_dir="codeml_config" />
        <data format="txt" name="2ngdn" label="2NG.dN" from_work_dir="2NG.dN" />
        <data format="txt" name="2ngds" label="2NG.dS" from_work_dir="2NG.dS" />
        <data format="txt" name="2ngt" label="2NG.t" from_work_dir="2NG.t" />        
        <data format="txt" name="lnf" label="lnf" from_work_dir="lnf" />
        <data format="txt" name="rst" label="rst" from_work_dir="rst" />
        <data format="txt" name="rst1" label="rst1" from_work_dir="rst1" />
        <data format="txt" name="rub" label="rub" from_work_dir="rub" />
        <data format="txt" name="run" label="run_codeml" from_work_dir="run_codeml" />
        <data format="txt" name="4fold" label="4fold.nuc" from_work_dir="4fold.nuc" >
            <filter>adv['verbose']=="1"</filter>
        </data>
    </outputs>
    
    <tests>
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="0" />
                <param name="NSsites" value="0" />
            </conditional>
            <param name="adv.fix_omega" value="0" />
            <param name="adv.omega" value="0.2" />
            <param name="RateAncestor" value="1" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="tree" ftype="txt" value="RAxML_bestTree" />
            <output name="2ngdn" value="1_2ngdn" />
            <output name="2ngds" value="1_2ngds" />
            <output name="2ngt" value="1_2ngt" />
            <output name="run" value="1_run_codeml" lines_diff="20"/>
            <output name="ctl" value="1_codeml.ctl" lines_diff="4" />
        </test>            
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="2" />
                <param name="NSsites" value="0" />
            </conditional>
            <param name="adv.fix_omega" value="0" />
            <param name="adv.omega" value="0.2" />
            <param name="RateAncestor" value="1" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="tree" ftype="txt" value="tree_model2" />
            <output name="2ngdn" value="2_2ngdn" />
            <output name="2ngds" value="2_2ngds" />
            <output name="2ngt" value="2_2ngt" />
            <output name="run" value="2_run_codeml" lines_diff="20" />
            <output name="ctl" value="2_codeml.ctl" lines_diff="4" />         
        </test>
        <test>
            <conditional name="compat_model" >
                <param name="brmodel" value="3" />
                <param name="NSsites" value="2" />
            </conditional>
            <param name="adv.fix_omega" value="0" />
            <param name="adv.omega" value="0.2" />
            <param name="RateAncestor" value="1" />
            <param name="concat_nuc" ftype="fasta" value="concat.fasta" />
            <param name="tree" ftype="txt" value="tree_model3" />
            <output name="2ngdn" value="3_2ngdn" />
            <output name="2ngds" value="3_2ngds" />
            <output name="2ngt" value="3_2ngt" />
            <output name="run" value="3_run_codeml" lines_diff="20"/>
            <output name="ctl" value="3_codeml.ctl" lines_diff="4" />           
        </test>        
    </tests>
    
    <help>

.. class:: infomark

**Galaxy integration** Victor Mataigne and ABIMS TEAM

 | Contact support.abims@sb-roscoff.fr for any questions or concerns about the Galaxy implementation of this tool.

---------------------------------------------------

==========
CompCodeML
==========

| Full and detailed codeml readme on the the paml website_

.. _website: http://abacus.gene.ucl.ac.uk/software/paml.html

.. class:: warningmark

| Due to their high number, some parameters compatibility can remain. Basically, this implementation handles incompatibilities between model, but you should have a look at the full readme before looking at the advanced parameters. 
| If you choose by mistake incompatible parameters, the output files will be empty, except the log file which will normally explicit the error.

-----------
Description
-----------

| codeML finds positive selection within branches or codons within a tree and a set of sequences.

-----------
Input files
-----------

| - a treefile in Newick format (with or without branch lengths) 
| - a fasta file with sequences from the species of the tree file (one header/sequence per species) and run codeml (from the paml suite).

----------------
Input parameters
----------------

| Several models are available.
| - branch models ("model" parameter)
| - sites models ("NSsites" parameter, model is left at 0)
| - branch-sites models (when model = 2 NSsites=2,3)
| - Clade models (when model=3 NSsites=2,3)
| Basically, this tool write a configfile called codeml.ctl with the specified parameters and then launches codeml.

-------------------
Advanced Parameters
-------------------

See paml complete manual and FAQ on paml website_

.. _website: http://abacus.gene.ucl.ac.uk/software/paml.html

----------------
Example of model
----------------

| How do I run the branch-site models (A &amp; B in Yang &amp; Nielsen 2002 MBE) ?
| The options are
| Model A: (model=2, NSsites=2)
| Model B: (model=2, NSsites=3)

----------------------------------------------------------
How to edit manually the tree file : Branch or node labels
----------------------------------------------------------

 | Some models implemented in codeml allow several groups of branches on the tree, which are assigned different parameters of interest.  For example, in the local clock models (clock = 2 or 3), you can have, say, 3 branch rate groups, with low, medium, and high rates respectively. Also the branch-specific codon models (model = 2 or 3 or codonml) allow different branch groups to have different ωs, leading to so called “two-ratios” and “three-ratios” models.  All those models require branches or nodes in the tree to be labeled. Branch labels are specified in the same way as branch lengths except that the symbol “#” is used rather than “:”. The branch labels are consecutive integers starting from 0, which is the default and does not have to be specified.

| In ((Hsa_Human, Hla_gibbon) #1, ((Cgu/Can_colobus, Pne_langur), Mmu_rhesus), (Ssc_squirrelM, Cja_marmoset));
| The internal branch ancestral to human and gibbon has the ratio ω1, while all other branches (with the default label #0) have the background ratio ω0.

| The following trees are equivalent :
| ((rabbit, rat) $1, human), goat_cow, marsupial);
| (((rabbit #1, rat #1) #1, human), goat_cow, marsupial);
| $ is the symbol for clade labels

|  Rules concerning nested clade labels : The symbol # takes precedence over the symbol $, and clade labels close to the tips take precedence over clade labels for ancestral nodes close to the root.
| In the tree 
| ((((rabbit, rat) $2, human #3), goat_cow) $1, marsupial);
| $1 is first applied to the whole clade of placental mammals (except for the human lineage), and then $2 is applied to the rabbit-rat clade. 
| Equivalent tree with only '#' : 
| ((((rabbit #2, rat #2) #2, human #3) #1, goat_cow #1) #1, marsupial); 

    </help>

    <citations>
        <citation type="bibtex">Yang Z. ; PAML 4: phylogenetic analysis by maximum likelihood ; Mol Biol Evol 2007 24(8):1586-91</citation>
    </citations>
</tool>
