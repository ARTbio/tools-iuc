<tool id="snpEff_build_gb" name="Build SnpEff" version="@WRAPPER_VERSION@.1">
    <description>database from Genbank datasets</description>
    <macros>
        <import>snpEff_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command><![CDATA[

        mkdir '${snpeff_output.files_path}' &&

        mkdir '${snpeff_output.files_path}'/'${genome_version}' &&
        
        ln -s '${input_gbk}' '${snpeff_output.files_path}'/'${genome_version}'/genes.gbk &&

        snpEff -Xmx8g build -v 
        -configOption '${genome_version}'.genome='${genome_version}' 
        -configOption '${genome_version}'.codonTable='${codon_table}'
        -genbank -dataDir '$snpeff_output.files_path' '$genome_version'

    ]]></command>
    <inputs>
        <param name="genome_version" type="text" value="" label="Name for the database" help="for E. coli K12 you may want to use 'EcK12' etc.">
            <validator type="regex" message="A genome version name is required">\S+</validator>
        </param>
        <param name="input_gbk" type="data" format="genbank,genbank.gz" label="Genbank dataset to build database from" help="This Genbank file will be used to generate snpEff database"/>
        <param name="codon_table" type="select" label="Select genetic code for this sequence" help="If this sequence uses non-standard genetic code, select one from these options">
                <option selected="true" value="Standard">Standard</option>
                <option value="Vertebrate_Mitochondrial">Vertebrate_Mitochondrial</option>
                <option value="Yeast_Mitochondrial">Yeast_Mitochondrial</option>
                <option value="Mold_Mitochondrial">Mold_Mitochondrial</option>
                <option value="Protozoan_Mitochondrial">Protozoan_Mitochondrial</option>
                <option value="Coelenterate">Coelenterate</option>
                <option value="Mitochondrial">Mitochondrial</option>
                <option value="Mycoplasma">Mycoplasma</option>
                <option value="Spiroplasma">Spiroplasma</option>
                <option value="Invertebrate_Mitochondrial">Invertebrate_Mitochondrial</option>
                <option value="Ciliate_Nuclear">Ciliate_Nuclear</option>
                <option value="Dasycladacean_Nuclear">Dasycladacean_Nuclear</option>
                <option value="Hexamita_Nuclear">Hexamita_Nuclear</option>
                <option value="Echinoderm_Mitochondrial">Echinoderm_Mitochondrial</option>
                <option value="Flatworm_Mitochondrial">Flatworm_Mitochondrial</option>
                <option value="Euplotid_Nuclear">Euplotid_Nuclear</option>
                <option value="Bacterial_and_Plant_Plastid">Bacterial_and_Plant_Plastid</option>
                <option value="Alternative_Yeast_Nuclear">Alternative_Yeast_Nuclear</option>
                <option value="Ascidian_Mitochondrial">Ascidian_Mitochondrial</option>
                <option value="Alternative_Flatworm_Mitochondrial">Alternative_Flatworm_Mitochondrial</option>
                <option value="Blepharisma_Macronuclear">Blepharisma_Macronuclear</option>
                <option value="Chlorophycean_Mitochondrial">Chlorophycean_Mitochondrial</option>
                <option value="Trematode_Mitochondrial">Trematode_Mitochondrial</option>
                <option value="Scenedesmus_obliquus_Mitochondrial">Scenedesmus_obliquus_Mitochondrial</option>
                <option value="Thraustochytrium_Mitochondrial">Thraustochytrium_Mitochondrial</option>
            </param>
    </inputs>
    <outputs>
        <data name="snpeff_output" format="snpeffdb">
            <actions>
                <action name="snpeff_version" type="metadata" default="SnpEff4.3"/>
            </actions>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="genome_version" value="pBR322"/>
            <param name="input_gbk" value="pBR322.gbk" />
            <output name="snpeff_db">
                <assert_contents>
                    <has_text text="pBR322" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

This tool uses `"snpEff build -genbank"` command to create a snpEff database from a Genbank dataset. Using Genbank data for creating databases has several advantages:

 #. Genbank files contains annotations (such as locations of genes) together with sequences. This was one ensures that these two are in sync with each other
 #. When you are analyzing small genomes it is much more convenient to create a database on the fly and use it.

-------

.. class:: infomark

**The usage scenario**

Suppose you have a series of Illumina reads from an experiment involving *E. coli* K-12 MG1655. You want to map these reads to the reference genome of K-12 MG1655, call variants, and annotate them using snpEff. This tool enables you to follow the following analysis steps:

 #. Download genome from `NCBI <ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/966/145/GCF_002966145.1_ASM296614v1/GCF_002966145.1_ASM296614v1_genomic.gbff.gz>`_ into Galaxy.
 #. Use **Genbank2Fasta** converter to generate FASTA dataset containing the genome
 #. Use your Illumina reads to map against this FASTA dataset using BWA-MEM
 #. Call variants using **Freebayes**
 #. Use this tool to generate a snpEff database from the file you downloaded at step 1.
 #. Annotate vcf output of Freebayes using snpEff tool (using *Custom* option for **Genome source** parameter)

In this scenario Genbank dataset is used twice. First, it is used to produce FASTA sequences that are using by BWA to map against. Second, it is used to create snpEff database. This guarantees that you will not have any issues related to reference sequence naming.


@EXTERNAL_DOCUMENTATION@
]]>
    </help>
    <expand macro="citations" />
</tool>
