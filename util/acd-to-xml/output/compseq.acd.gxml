<?xml version='1.0' encoding='UTF-8'?>
<tool id="compseq" name="compseq" version="6.6.0">
  <description>Calculate the composition of unique words in sequences</description>
  <macros>
    <token name="@EXECUTABLE@">compseq</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>compseq

#if $param_compseq_version:
  -compseq:version     "$param_compseq_version"
#end if
#if $param_input_sequence:
  -input:sequence $param_input_sequence
#end if
#if $param_input_infile:
  -input:infile $param_input_infile
#end if
#if $param_required_word:
  -required:word $param_required_word
#end if
#if $param_additional_frame:
  -additional:frame $param_additional_frame
#end if
#if $param_additional_ignorebz:
  -additional:ignorebz
#end if
#if $param_additional_reverse:
  -additional:reverse
#end if
#if $param_additional_calcfreq:
  -additional:calcfreq
#end if
#if $param_outfile:
  -outfile $param_outfile
#end if
#if $param_zerocount:
  -zerocount $param_zerocount
#end if
</command>
  <inputs>
    <param name="param_compseq_version" type="text" size="30" value="6.6.0" label="Version of the tool that generated this parameters file" help="(-version) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_input_sequence" type="data" format="fasta" optional="True" label="sequence parameter" help="(-sequence) "/>
    <param name="param_input_infile" type="data" format="" optional="True" label="Program compseq output file (optional)" help="(-infile) "/>
    <param name="param_required_word" type="integer" min="1" optional="True" value="2" label="Word size to consider (e.g. 2=dimer)" help="(-word) "/>
    <param name="param_additional_frame" type="integer" min="0" optional="True" value="0" label="Frame of word to look at (0=all frames)" help="(-frame) "/>
    <param name="param_additional_ignorebz" type="boolean" truevalue="-additional:ignorebz" falsevalue="" optional="True" label="Ignore the amino acids B and Z and just count                   them as 'Other'" help="(-ignorebz) "/>
    <param name="param_additional_reverse" type="boolean" truevalue="-additional:reverse" falsevalue="" optional="True" label="Count words in the forward and reverse sense" help="(-reverse) "/>
    <param name="param_additional_calcfreq" type="boolean" truevalue="-additional:calcfreq" falsevalue="" optional="True" label="Calculate expected frequency from sequence" help="(-calcfreq) "/>
  </inputs>
  <outputs>
    <data name="param_outfile" format="data"/>
    <data name="param_zerocount" format="data"/>
  </outputs>
  <help>**What it does**

</help>
  <expand macro="references"/>
</tool>
