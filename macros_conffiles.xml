<?xml version="1.0"?>
<macros>
  <xml name="configfile_circos_conf">
    <configfile name="circos_conf"><![CDATA[
<<include colors_fonts_patterns.conf>>
<<include housekeeping.conf>>
karyotype = karyotype.txt

<image>
  <<include etc/image.conf>>
</image>

<<include ticks.conf>>
<<include ideogram.conf>>
    ]]></configfile>
  </xml>
  <xml name="configfile_ticks_conf">
    <configfile name="ticks_conf"><![CDATA[
show_ticks          = ${ticks.show_ticks}
show_tick_labels    = yes

<ticks>
    radius           = ${ticks.radius}r
    color            = ${ticks.color}
    thickness        = 2p
    multiplier       = ${ticks.multiplier}

    #for $tick_group in $ticks.tick_group:
    <tick>
        spacing        = ${tick_group.spacing}
        size           = ${tick_group.size}p
        show_label     = ${tick_group.show_tick_labels}
        label_size     = ${tick_group.label_size}p
        label_offset   = ${tick_group.label_offset}p
        format         = ${tick_group.format} kb
        ## TODO: figure out automated tick labels
        ##if ${ticks.multiplier} * ${tick_group.spacing}
    </tick>
    #end for
</ticks>
]]>
    </configfile>
  </xml>
  <xml name="configfile_ideogram_conf">
    <configfile name="ideogram_conf"><![CDATA[

<ideogram>

<spacing>
    ## spacing between ideograms
    default = ${ideogram.spacing}r
</spacing>

# ideogram position, thickness and fill
radius           = ${ideogram.radius}r
thickness        = ${ideogram.thickness}p
fill             = yes

show_label       = ${ideogram.ideogram_labels.show_label}
label_radius     = dims(ideogram,radius) + 0.075r
label_size       = 24
label_parallel   = ${ideogram.ideogram_labels.parallel}

show_bands            = yes
fill_bands            = yes
band_transparency     = 4

</ideogram>
]]></configfile>
  </xml>
  <xml name="configfile_histogram_conf">
    <configfile name="histogram_conf"><![CDATA[
#for $hi, $histogram in enumerate($sec_hist.histograms):

    <plot>
        type = histogram
        file = data/histogram-${hi}.txt

        r1   = ${histogram.r1}r
        r0   = ${histogram.r0}r

        fill_color = ${histogram.color}
        thickness = ${histogram.outline}p
        extend_bin = ${histogram.extend_bins}

        <rules>
        #for $rule in $histogram.sec_rule.rules:
            <rule>
                #for $condition in $rule.conditions
                    #if str($condition.application.application_select) == "1":
                        condition = 1
                    #elif str($condition.application.application_select) == "on":
                        #set on_str = ' '.join([ "on(%s)" % $chr.strip() for $chr in $condition.application.on_genomes.split(',') ])
                        condition = $on_str
                    #elif str($condition.application.application_select) == "pos":
                        #if $condition.application.pos_gt != 0:
                        condition = var(start) > $condition.application.pos_gt
                        #end if

                        #if $condition.application.pos_lt != 0:
                        condition = var(start) < $condition.application.pos_lt
                        #end if
                    #elif str($condition.application.application_select) == "value":
                        #if $condition.application.pos_gt != 0:
                        condition = var(value) > $condition.application.pos_gt
                        #end if

                        #if $condition.application.pos_lt != 0:
                        condition = var(value) < $condition.application.pos_lt
                        #end if
                    #elif str($condition.application.application_select) == "var":
                        condition = var(${condition.application.varname}) ${condition.application.cond_select} "${condition.application.varvalue}"
                    #end if
                #end for

                #for $action in $rule.actions:
                    $action.action.action_select = ${action.action.action_value}
                #end for
            </rule>
        #end for
        </rules>

    </plot>
#end for
    ]]></configfile>
  </xml>
</macros>
